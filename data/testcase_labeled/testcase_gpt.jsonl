{"name": "p02936 AtCoder Beginner Contest 138 - Ki", "specification": "Constraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq Q \\leq 2 \\times 10^5\n* 1 \\leq a_i < b_i \\leq N\n* 1 \\leq p_j \\leq N\n* 1 \\leq x_j \\leq 10^4\n* The given graph is a tree.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\na_1 b_1\n:\na_{N-1} b_{N-1}\np_1 x_1\n:\np_Q x_Q", "testcase": ["3 2\n1 2\n1 3\n1 1000\n2 500", "5 3\n1 2\n2 3\n3 4\n4 5\n3 200\n5 300\n1 100", "4 1\n1 2\n2 3\n3 4\n2 500", "6 2\n1 2\n1 3\n2 4\n2 5\n5 6\n4 750\n6 250", "7 3\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n5 2000\n3 1500\n7 1000", "8 4\n1 2\n2 3\n2 4\n4 5\n4 6\n6 7\n6 8\n5 1000\n3 1500\n7 750\n1 250", "10 5\n1 2\n1 3\n3 4\n3 5\n5 6\n5 7\n7 8\n7 9\n9 10\n6 500\n4 250\n8 1500\n2 2000\n1 750", "9 3\n1 2\n2 3\n2 4\n4 5\n4 6\n6 7\n6 8\n8 9\n3 500\n7 750\n1 250", "6 3\n1 2\n1 3\n3 4\n3 5\n5 6\n4 1000\n2 2000\n1 500", "7 4\n1 2\n2 3\n2 4\n4 5\n5 6\n5 7\n6 1000\n3 500\n7 1500\n1 2000"]}
{"name": "p02756 AtCoder Beginner Contest 158 - String Formation", "specification": "Constraints\n\n* 1 \\leq |S| \\leq 10^5\n* S consists of lowercase English letters.\n* 1 \\leq Q \\leq 2 \\times 10^5\n* T_i = 1 or 2.\n* F_i = 1 or 2, if provided.\n* C_i is a lowercase English letter, if provided.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nQ\nQuery_1\n:\nQuery_Q\n\n\nIn the 3-rd through the (Q+2)-th lines, Query_i is one of the following:\n\n\n1\n\n\nwhich means T_i = 1, and:\n\n\n2 F_i C_i\n\n\nwhich means T_i = 2.", "testcase": ["abcd\n5\n1\n2 1 a\n2 2 z\n1\n2 2 y", "xyz\n3\n2 1 a\n2 1 b\n2 2 c", "a\n1\n1", "abcdefghijk\n10\n1\n1\n2 2 z\n2 1 a\n1\n2 2 x\n2 1 b\n1\n2 2 w", "abcde\n2\n2 1 z\n2 2 y", "lmnopqrst\n4\n1\n2 1 x\n1\n2 2 z", "ghijklmn\n8\n2 2 a\n2 2 b\n1\n2 1 c\n2 1 d\n1\n2 2 e\n1", "abcde\n5\n1\n2 2 z\n1\n2 2 y\n2 1 x", "xyz\n3\n2 1 a\n1\n2 2 b", "a\n2\n2 1 b\n2 2 c"]}
{"name": "p02696 AtCoder Beginner Contest 165 - Floor Function", "specification": "Constraints\n\n* 1 \u2264 A \u2264 10^{6}\n* 1 \u2264 B \u2264 10^{12}\n* 1 \u2264 N \u2264 10^{12}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B N", "testcase": ["1 1 1", "1000 1000000000000 1000000000000", "500000 500000000000 500000000000", "10 10000000000 1000000000", "1000000 999999999999 999999999999", "999999 100000000000 500000000000", "250000 250000000000 250000000000", "100 1000000000 1000000000", "5000 100000000000 100000", "999999 999999999999 1"]}
{"name": "p03013 AtCoder Beginner Contest 129 - Typical Stairs", "specification": "Constraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq M \\leq N-1\n* 1 \\leq a_1 < a_2 < ... < a_M \\leq N-1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1\na_2\n.\n.\n.\na_M", "testcase": ["1 0", "2 0", "2 1\n1", "5 2\n1\n3", "10 3\n2\n5\n8", "20 4\n3\n7\n11\n15", "50 5\n10\n20\n30\n40\n49", "100 6\n15\n30\n45\n60\n75\n90", "1000 7\n100\n300\n500\n700\n900\n950\n999", "10000 8\n1000\n2000\n3000\n4000\n5000\n6000\n7000\n8000"]}
{"name": "p02953 AtCoder Beginner Contest 136 - Build Stairs", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH_1 H_2 ... H_N", "testcase": ["1\n1000000000", "5\n1 2 3 4 5", "3\n10 20 30", "4\n100 200 300 400", "10\n100000000 99999999 88888888 77777777 66666666 55555555 44444444 33333333 22222222 11111111", "2\n500000000 500000000", "7\n10 20 30 40 50 60 70", "8\n1 2 3 4 5 6 7 8", "6\n100000 200000 300000 400000 500000 600000", "9\n9 8 7 6 5 4 3 2 1"]}
{"name": "791_A. Bear and Big Brother", "specification": "Input\n\nThe only line of the input contains two integers a and b (1 \u2264 a \u2264 b \u2264 10) \u2014 the weight of Limak and the weight of Bob respectively.", "testcase": ["1 1", "1 2", "1 10", "3 5", "5 5", "4 6", "2 8", "7 10", "6 9", "10 10"]}
{"name": "p02891 AtCoder Grand Contest 039 - Connection and Disconnection", "specification": "Constraints\n\n* 1 \\leq |S| \\leq 100\n* S consists of lowercase English letters.\n* 1 \\leq K \\leq 10^9\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nK", "testcase": ["abc\n1", "z\n1000000000", "hello\n500000000", "abcdefghijklmnopqrstuvwxyz\n999999999", "teststring\n10", "openai\n123456789", "gptfour\n99999999", "machinelearning\n100000", "a\n1000000000", "model\n987654321"]}
{"name": "1409_A. Yet Another Two Integers Problem", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 2 \u22c5 10^4) \u2014 the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains two integers a and b (1 \u2264 a, b \u2264 10^9).", "testcase": ["1\n1000000000 1000000000", "1\n500000000 250000000", "1\n1 1000000000", "1\n123456789 987654321", "2\n100000000 500000000\n250000000 750000000", "2\n1 1\n1000000000 1", "1\n999999999 1000000000", "2\n50000000 10000000\n100000000 200000000", "1\n250000000 500000000", "1\n99999999 88888888"]}
{"name": "p02660 AtCoder Beginner Contest 169 - Div Game", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^{12}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN", "testcase": ["1", "10", 100", "1000", "10000", "100000", "1000000000", "100000000000", "500000000000", "1000000000000"]}
{"name": "p02693 AtCoder Beginner Contest 165 - We Love Golf", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq A \\leq B \\leq 1000\n* 1 \\leq K \\leq 1000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\nA B", "testcase": ["10\n1 10", "500\n200 500", "1000\n100 1000", "15\n5 15", "300\n50 300", "7\n1 7", "1000\n1 1000", "250\n100 250", "500\n500 1000", "2\n1 2"]}
{"name": "p02718 AtCoder Beginner Contest 161 - Popular Vote", "specification": "Constraints\n\n* 1 \\leq M \\leq N \\leq 100\n* 1 \\leq A_i \\leq 1000\n* A_i are distinct.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 ... A_N", "testcase": ["2 1\n1 1000", "5 2\n20 40 60 80 100", "10 10\n1 2 3 4 5 6 7 8 9 10", "4 3\n50 150 250 350", "6 4\n100 200 300 400 500 600", "3 2\n500 700 900", "7 5\n10 20 30 40 50 60 70", "8 6\n100 200 300 400 500 600 700 800", "9 8\n11 22 33 44 55 66 77 88 99", "10 1\n10 20 30 40 50 60 70 80 90 100"]}
{"name": "443_A. Anton and Letters", "specification": "Input\n\nThe first and the single line contains the set of letters. The length of the line doesn't exceed 1000. It is guaranteed that the line starts from an opening curved bracket and ends with a closing curved bracket. Between them, small English letters are listed, separated by a comma. Each comma is followed by a space.", "testcase": ["(a, b, c, d, e, f, g, h, i, j)", "(k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z)", "(a, b)", "(c, d, e, f, g, h, i)", "(j, k, l, m, n, o, p)", "(q, r, s)", "(t, u, v, w, x)", "(y, z, a, b, c, d, e, f, g)", "(h, i, j, k, l, m, n, o)", "(p, q, r, s, t, u, v, w, x, y, z, a)"]}
{"name": "p03324 AtCoder Beginner Contest 100 - Ringo's Favorite Numbers", "specification": "Constraints\n\n* D is 0, 1 or 2.\n* N is an integer between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nD N", "testcase": ["0 1", "1 50", "2 100", "0 20", "1 75", "2 30", "0 5", "1 99", "2 60", "0 80"]}
{"name": "p02862 AtCoder Beginner Contest 145 - Knight", "specification": "Constraints\n\n* 1 \\leq X \\leq 10^6\n* 1 \\leq Y \\leq 10^6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y", "testcase": ["1 1", "1000 500", "500000 500000", "999999 1", "1 999999", "10 100", "1000000 1000000", "123456 654321", "999999 1000000", "1000000 999999"]}
{"name": "p03854 AtCoder Beginner Contest 049 - Daydream", "specification": "Constraints\n\n* 1\u2266|S|\u226610^5\n* S consists of lowercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS", "testcase": ["a", "abcde", "abcdefghijklmnopqrst", "racecar", "zzzzzzzzzz", "abcdcbaabcdcbaabcdcba", "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwx", "aaaaaaaaaa....aaaaaaaaaa (10^5 times 'a')", "ababababab....ababababab (50,000 times 'ab')"]}
{"name": "469_A. I Wanna Be the Guy", "specification": "Input\n\nThe first line contains a single integer n (1 \u2264 n \u2264 100). \n\nThe next line contains an integer p (0 \u2264 p \u2264 n) at first, then follows p distinct integers a1, a2, ..., ap (1 \u2264 ai \u2264 n). These integers denote the indices of levels Little X can pass. The next line contains the levels Little Y can pass in the same format. It's assumed that levels are numbered from 1 to n.", "testcase": ["5\n1 2\n2 3 4", "10\n3 1 2 3\n4 4 5 6 7", "15\n5 1 3 5 7 9\n4 2 4 6 8", "8\n2 1 5\n3 2 3 6", "12\n4 2 4 6 8\n3 1 3 5", "100\n5 10 20 30 40 50\n4 60 70 80 90", "20\n6 1 3 5 7 9 11\n5 2 4 6 8 10", "25\n5 5 10 15 20 25\n6 1 2 3 4 6", "50\n7 5 10 15 20 25 30 35\n8 1 2 3 4 6 40 45 50", "30\n5 1 6 11 16 21\n6 5 10 15 20 25 30"]}
{"name": "p03221 AtCoder Beginner Contest 113 - ID", "specification": "Constraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq P_i \\leq N\n* 1 \\leq Y_i \\leq 10^9\n* Y_i are all different.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nP_1 Y_1\n:\nP_M Y_M", "testcase": ["2 2\n1 1000000000\n2 999999999", "5 3\n1 20\n3 30\n5 25", "100 4\n10 567\n20 678\n30 789\n40 890", "1000 5\n100 1000000000\n200 999999999\n300 999999998\n400 999999997\n500 999999996", "10 10\n1 1000000000\n2 999999999\n3 999999998\n4 999999997\n5 999999996\n6 999999995\n7 999999994\n8 999999993\n9 999999992\n10 999999991", "3 3\n1 1\n2 2\n3 3", "50 4\n10 123456789\n20 987654321\n30 111111111\n40 222222222", "10000 5\n5000 1000000000\n4000 999999999\n3000 999999998\n2000 999999997\n1000 999999996", "6 6\n1 10\n2 20\n3 30\n4 40\n5 50\n6 60", "4 4\n1 999999999\n2 888888888\n3 777777777\n4 666666666"]}
{"name": "p03309 AtCoder Beginner Contest 102 - Linear Approximation", "specification": "Constraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N", "testcase": ["1\n1", "5\n23 45 67 89 12", "2\n1000000000 1", "3\n500000000 500000000 500000000", "10\n10 20 30 40 50 60 70 80 90 100", "4\n999999999 1000000000 999999999 1000000000", "6\n500 1000 1500 2000 2500 3000", "7\n10 9 8 7 6 5 4", "8\n100 200 300 400 500 600 700 800", "9\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000"]}
{"name": "p02762 AtCoder Beginner Contest 157 - Friend Suggestions", "specification": "Constraints\n\n* All values in input are integers.\n* 2 \u2264 N \u2264 10^5\n* 0 \\leq M \\leq 10^5\n* 0 \\leq K \\leq 10^5\n* 1 \\leq A_i, B_i \\leq N\n* A_i \\neq B_i\n* 1 \\leq C_i, D_i \\leq N\n* C_i \\neq D_i\n* (A_i, B_i) \\neq (A_j, B_j) (i \\neq j)\n* (A_i, B_i) \\neq (B_j, A_j)\n* (C_i, D_i) \\neq (C_j, D_j) (i \\neq j)\n* (C_i, D_i) \\neq (D_j, C_j)\n* (A_i, B_i) \\neq (C_j, D_j)\n* (A_i, B_i) \\neq (D_j, C_j)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M K\nA_1 B_1\n\\vdots\nA_M B_M\nC_1 D_1\n\\vdots\nC_K D_K", "testcase": ["5 2 2\n1 2\n3 4\n1 3\n2 4", "10 3 1\n1 2\n3 4\n5 6\n7 8", "20 2 3\n1 2\n19 20\n3 4\n5 6\n7 8", "6 3 1\n1 2\n3 4\n5 6\n1 3", "8 1 3\n1 2\n1 3\n2 4\n3 5", "9 2 2\n1 2\n3 4\n5 6\n7 8", "12 3 1\n1 2\n3 4\n5 6\n9 10", "50 4 2\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12", "25 2 3\n1 2\n3 4\n5 6\n7 8\n9 10", "100 1 1\n1 2\n3 4"]}
{"name": "148_A. Insomnia cure", "specification": "Input\n\nInput data contains integer numbers k, l, m, n and d, each number in a separate line (1 \u2264 k, l, m, n \u2264 10, 1 \u2264 d \u2264 10^5).", "testcase": ["1\n2\n3\n4\n100", "3\n5\n7\n10\n500", "4\n6\n8\n2\n1000", "10\n9\n8\n7\n10000", "2\n4\n6\n8\n5000", "1\n3\n5\n7\n99999", "5\n10\n2\n6\n20000", "7\n8\n9\n10\n50000", "10\n1\n2\n3\n75000", "8\n4\n6\n10\n25000"]}
{"name": "1353_B. Two Arrays And Swaps", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 200) \u2014 the number of test cases. Then t test cases follow.\n\nThe first line of the test case contains two integers n and k (1 \u2264 n \u2264 30; 0 \u2264 k \u2264 n) \u2014 the number of elements in a and b and the maximum number of moves you can do. The second line of the test case contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 30), where a_i is the i-th element of a. The third line of the test case contains n integers b_1, b_2, ..., b_n (1 \u2264 b_i \u2264 30), where b_i is the i-th element of b.", "testcase": ["1\n2 1\n3 2 4\n5 6 7", "2\n3 0\n10 20 30\n1 2 3\n4 2\n1 2 3 4\n5 6 7 8", "1\n5 3\n5 6 7 8 9\n1 2 3 4 5", "1\n4 4\n1 2 3 4\n5 6 7 8", "2\n3 1\n1 5 10\n2 6 11\n2 0\n7 8\n5 6", "1\n5 2\n10 15 20 25 30\n1 2 3 4 5", "1\n6 3\n6 7 8 9 10 11\n1 2 3 4 5 6", "1\n7 5\n1 2 3 4 5 6 7\n14 13 12 11 10 9 8", "1\n5 5\n5 10 15 20 25\n1 2 3 4 5", "2\n4 2\n4 8 12 16\n1 2 3 4\n3 1\n7 14 21\n2 4 6"]}
{"name": "492_B. Vanya and Lanterns", "specification": "Input\n\nThe first line contains two integers n, l (1 \u2264 n \u2264 1000, 1 \u2264 l \u2264 10^9) \u2014 the number of lanterns and the length of the street respectively. \n\nThe next line contains n integers ai (0 \u2264 ai \u2264 l). Multiple lanterns can be located at the same point. The lanterns may be located at the ends of the street.", "testcase": ["2 1000\n0 1000", "5 1000000000\n0 250000000 500000000 750000000 1000000000", "3 500\n0 250 500", "4 200\n50 100 150 200", "10 1000\n0 100 200 300 400 500 600 700 800 1000", "6 1000000\n0 200000 400000 600000 800000 1000000", "7 10000\n0 1500 3000 4500 6000 7500 10000", "8 5000\n0 700 1400 2100 2800 3500 4200 5000", "9 100000\n0 12500 25000 37500 50000 62500 75000 87500 100000", "1 10^9\n500000000"]}
{"name": "p03076 AtCoder Beginner Contest 123 - Five Dishes", "specification": "Constraints\n\n* A, B, C, D and E are integers between 1 and 123 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\nC\nD\nE", "testcase": ["5\n10\n15\n20\n25", "1\n2\n3\n4\n5", "123\n122\n121\n120\n119", "50\n75\n100\n25\n123", "111\n112\n113\n114\n115", "99\n88\n77\n66\n55", "33\n44\n55\n66\n77", "101\n102\n103\n104\n105", "117\n116\n115\n114\n113", "90\n91\n92\n93\n94"]}
{"name": "p02612 AtCoder Beginner Contest 173 - Payment", "specification": "Constraints\n\n* 1 \\leq N \\leq 10000\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN", "testcase": ["1", "100", "500", "1000", "2500", "5000", "7500", "8000", "9000", "10000"]}
{"name": "p03137 AtCoder Beginner Contest 117 - Streamline", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* -10^5 \\leq X_i \\leq 10^5\n* X_1, X_2, ..., X_M are all different.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nX_1 X_2 ... X_M", "testcase": ["2 2\n-100000 100000", "5 3\n-50000 0 50000", "10 5\n-1000 -500 0 500 1000", "50 4\n-25000 -50000 75000 100000", "100 5\n-10000 -5000 0 5000 10000", "150 3\n-50000 0 50000", "200 4\n-25000 -50000 75000 100000", "300 5\n-10000 -5000 0 5000 10000", "1000 4\n-25000 -50000 75000 100000", "10000 5-10000 -5000 0 5000 10000"]}
{"name": "510_A. Fox And Snake", "specification": "Input\n\nThe only line contains two integers: n and m (3 \u2264 n, m \u2264 50). \n\nn is an odd number.", "testcase": ["5 7", "9 10", "11 12", "13 20", "15 25", "17 30", "19 33", "21 40", "23 45", "31 50"]}
{"name": "p03032 AtCoder Beginner Contest 128 - equeue", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 50\n* 1 \\leq K \\leq 100\n* -10^7 \\leq V_i \\leq 10^7\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nV_1 V_2 ... V_N", "testcase": ["2 1\n-10000000 10000000", "5 2\n0 5000 -5000 10000 -10000", "10 50\n1000 2000 3000 4000 5000 -1000 -2000 -3000 -4000 -5000", "3 3\n-5000000 -1000000 5000000", "7 5\n7000000 -7000000 1234567 -1234567 54321 -54321 0", "20 10\n10000 -10000 5000 -5000 2500 -2500 1250 -1250 625 -625 312 -312 156 -156 78 -78 39 -39 19 -19", "15 100\n-9999999 9999999 -8888888 8888888 -7777777 7777777 -6666666 6666666 -5555555 5555555 -4444444 4444444 -3333333", "4 4\n-10 0 10 10000000", "50 50\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50", "6 15\n-1 -2 -3 1 2 3"]}
{"name": "p02973 AtCoder Beginner Contest 134 - Sequence Decomposing", "specification": "Constraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N", "testcase": ["1\n0", "1\n1000000000", "5\n500\n10000\n250000\n500000\n1000000", "10\n10\n20\n30\n40\n50\n60\n70\n80\n90\n100", "10\n1000\n900\n800\n700\n600\n500\n400\n300\n200\n100", "3\n2\n4\n8", "4\n1\n3\n5\n7", "7\n0\n1000\n5000000\n10000000\n500\n1000000000\n500000000", "2\n500\n500", "100000\n500000000\n1000000000\n... (continue the sequence to include total 100000 numbers)"]}
{"name": "p02675 AtCoder Beginner Contest 168 - \u2234 (Therefore)", "specification": "Constraints\n\n* N is a positive integer not exceeding 999.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN", "testcase": ["1", 50", 100", "250", "500", "750", "999", "125", "375", "625"]}
{"name": "758_A. Holiday Of Equality", "specification": "Input\n\nThe first line contains the integer n (1 \u2264 n \u2264 100) \u2014 the number of citizens in the kingdom.\n\nThe second line contains n integers a1, a2, ..., an, where ai (0 \u2264 ai \u2264 10^6) \u2014 the welfare of the i-th citizen.", "testcase": ["1\n0", "5\n0 1000 5000 10000 50000", "10\n1000000 999999 999998 999997 999996 999995 999994 999993 999992 999991", "3\n400000 600000 800000", "4\n1 10000 100000 1000000", "6\n500 1000 1500 2000 2500 3000", "2\n0 1000000", "7\n700000 60000 5000 400 30 20 1", "8\n123456 234567 345678 456789 567890 678901 789012 890123", "10\n10 20 30 40 50 60 70 80 90 100"]}
{"name": "230_A. Dragons", "specification": "Input\n\nThe first line contains two space-separated integers s and n (1 \u2264 s \u2264 10^4, 1 \u2264 n \u2264 10^3). Then n lines follow: the i-th line contains space-separated integers xi and yi (1 \u2264 xi \u2264 10^4, 0 \u2264 yi \u2264 10^4) \u2014 the i-th dragon's strength and the bonus for defeating it.", "testcase": ["100 2\n1 500\n1000 1000", "50 3\n10 20\n15 30\n40 50", "5000 5\n100 1000\n200 1500\n300 2000\n400 2500\n500 3000", "150 4\n50 75\n60 90\n70 105\n80 120", "7000 3\n1000 2000\n2000 3000\n3000 4000", "300 2\n150 300\n200 150", "8000 4\n2000 1000\n3000 2000\n4000 3000\n5000 4000", "900 3\n300 500\n400 600\n200 300", "2000 5\n400 800\n500 900\n600 1000\n700 1100\n800 1200", "10000 2\n5000 4000\n6000 3000"]}
{"name": "1385_A. Three Pairwise Maximums", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 2 \u22c5 10^4) \u2014 the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains three integers x, y, and z (1 \u2264 x, y, z \u2264 10^9).", "testcase": ["1\n10 20 30", "1\n100 200 300", "2\n50 60 70\n80 90 100", "1\n999999999 500000000 100000000", "3\n20 40 60\n70 80 90\n1000000 2000000 3000000", "2\n123456789 987654321 111111111\n222222222 333333333 444444444", "1\n1 1 1", "2\n1000000000 999999999 1\n500000000 250000000 750000000", "3\n333333333 666666666 999999999\n111111 222222 333333\n1 2 3", "1\n50000000 60000000 70000000"]}
{"name": "1095_A. Repeating Cipher", "specification": "Input\n\nThe first line contains integer n (1 \u2264 n \u2264 55) \u2014 the length of the encrypted string. The second line of the input contains t \u2014 the result of encryption of some string s. It contains only lowercase Latin letters. The length of t is exactly n.\n\nIt is guaranteed that the answer to the test exists.", "testcase": ["5\nabcde", "10\njklmnopqrs", "20\nabcdefghijklmnopqrst", "6\nuvwxyz", "7\nghijklm", "15\nopqrstuvwxyzabcde", "12\nfghijklmnop", "8\nrstuvwxz", "30\nabcdefghijklmnopqrstuvwxyzabcd", "55\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno"]}
{"name": "1358_A. Park Lighting", "specification": "Input\n\nThe first line contains a single integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases in the input. Then t test cases follow.\n\nEach test case is a line containing two integers n, m (1 \u2264 n, m \u2264 10^4) \u2014 park sizes.", "testcase": ["1\n1 10000", "2\n5000 5000\n10000 1", "3\n100 200\n300 400\n500 600", "4\n1234 5678\n8765 4321\n1000 2000\n2000 3000", "5\n100 500\n500 1000\n1000 1500\n1500 2000\n2000 2500", "6\n123 456\n789 1011\n1213 1415\n1617 1819\n2021 2223\n2425 2627", "7\n1111 2222\n3333 4444\n5555 6666\n7777 8888\n9999 10000\n10000 9999\n9998 9997", "8\n2000 4000\n4000 6000\n6000 8000\n8000 10000\n1234 4321\n5678 8765\n1111 8888\n2222 9999", "9\n1001 2002\n3003 4004\n5005 6006\n7007 8008\n9009 10000\n111 222\n333 444\n555 666\n777 888", "10\n10 20\n30 40\n50 60\n70 80\n90 100\n110 120\n130 140\n150 160\n170 180\n190 200"]}
{"name": "p03472 AtCoder Beginner Contest 085 - Katana Thrower", "specification": "Constraints\n\n* 1 \u2264 N \u2264 10^5\n* 1 \u2264 H \u2264 10^9\n* 1 \u2264 a_i \u2264 b_i \u2264 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN H\na_1 b_1\n:\na_N b_N", "testcase": ["1 100\n50 200", "2 500\n100 200\n150 300", "3 1000\n200 400\n300 500\n150 450", "5 10000\n500 1000\n1000 2000\n1500 3000\n2000 4000\n2500 5000", "4 1000000000\n500000000 1000000000\n200000000 800000000\n300000000 900000000\n100000000 700000000", "3 300\n50 150\n75 225\n100 200", "2 1000000000\n200000000 600000000\n400000000 800000000", "5 2000\n500 700\n600 800\n700 900\n800 1000\n900 1100", "4 50000\n10000 20000\n15000 25000\n20000 30000\n25000 35000", "6 700\n100 200\n150 250\n200 300\n250 350\n300 400\n350 450"]}
{"name": "1352_C. K-th Not Divisible by n", "specification": "Input\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases in the input. Next, t test cases are given, one per line.\n\nEach test case is two positive integers n (2 \u2264 n \u2264 10^9) and k (1 \u2264 k \u2264 10^9).", "testcase": ["10\n2 1\n1000 500\n1000000 999999\n500000000 250000000\n999999999 1\n10 5\n200000000 150000000\n300 100\n999999998 999999997\n10000 9999"]}
{"name": "1333_A. Little Artem", "specification": "Input\n\nEach test contains multiple test cases. \n\nThe first line contains the number of test cases t (1 \u2264 t \u2264 20). Each of the next t lines contains two integers n, m (2 \u2264 n,m \u2264 100) \u2014 the number of rows and the number of columns in the grid.", "testcase": ["10\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n100 100"]}
{"name": "1180_A. Alex and a Rhombus", "specification": "Input\n\nThe first and only input line contains integer n (1 \u2264 n \u2264 100) \u2014 order of a rhombus whose numbers of cells should be computed.", "testcase": ["1", 5", 10", 20", 30", 40", 50", "60", "80", "100"]}
{"name": "p02708 AtCoder Beginner Contest 163 - Sum of Large Numbers", "specification": "Constraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 1 \\leq K \\leq N+1\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K", "testcase": ["1 1", "2 1", "2 3", "10 5", "100 50", "1000 1001", "5000 2500", "20000 15000", "100000 50000", "200000 200001"]}
{"name": "1325_A. EhAb AnD gCd", "specification": "Input\n\nThe first line contains a single integer t (1 \u2264 t \u2264 100) \u2014 the number of testcases.\n\nEach testcase consists of one line containing a single integer, x (2 \u2264 x \u2264 10^9).", "testcase": ["1\n2", "2\n5\n10", "3\n100\n500\n1000", "4\n10000\n50000\n100000\n500000", "5\n2000000\n5000000\n10000000\n20000000\n50000000", "1\n1000000000", "2\n500000000\n750000000", "3\n200000000\n400000000\n600000000", "4\n250000000\n450000000\n650000000\n850000000", "5\n100000000\n200000000\n300000000\n400000000\n500000000"]}
{"name": "1015_A. Points in Segments", "specification": "Input\n\nThe first line of the input contains two integers n and m (1 \u2264 n, m \u2264 100) \u2014 the number of segments and the upper bound for coordinates.\n\nThe next n lines contain two integers each l_i and r_i (1 \u2264 l_i \u2264 r_i \u2264 m) \u2014 the endpoints of the i-th segment. Segments may intersect, overlap or even coincide with each other. Note, it is possible that l_i=r_i, i.e. a segment can degenerate to a point.", "testcase": ["2 10\n1 5\n5 10", "3 20\n1 5\n5 10\n10 20", "4 50\n10 20\n15 25\n20 30\n25 35", "5 100\n1 20\n20 40\n40 60\n60 80\n80 100", "2 25\n5 15\n10 20", "3 30\n10 20\n15 25\n5 10", "4 40\n5 10\n10 20\n20 30\n30 40", "1 10\n1 10", "2 15\n1 5\n10 15", "3 100\n1 33\n34 66\n67 100"]}
{"name": "p02390 Watch", "specification": "Constraints\n\n* $0 \\leq S \\leq 86400$\n\nInput\n\nAn integer $S$ is given in a line.", "testcase": ["0", "43200", "86400", "3600", "7200", "14399", "28800", "68400", "1", "86399"]}
{"name": "977_C. Less or Equal", "specification": "Input\n\nThe first line of the input contains integer numbers n and k (1 \u2264 n \u2264 2 \u22c5 10^5, 0 \u2264 k \u2264 n). The second line of the input contains n integer numbers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^9) \u2014 the sequence itself.", "testcase": ["2 1\n1 2", "5 3\n5 4 3 2 1", "3 0\n100 200 300", "10 5\n10 9 8 7 6 5 4 3 2 1", "4 2\n1000000000 500000000 250000000 125000000", "5 5\n1 2 3 4 5", "7 3\n20 40 60 80 100 120 140", "8 4\n111 222 333 444 555 666 777 888", "6 1\n999999999 888888888 777777777 666666666 555555555 444444444", "4 0\n500 1000 1500 2000"]}
{"name": "1339_B. Sorted Adjacent Differences", "specification": "Input\n\nThe first line contains a single integer t (1 \u2264 t \u2264 10^{4}) \u2014 the number of test cases.\n\nThe first line of each test case contains single integer n (3 \u2264 n \u2264 10^{5}) \u2014 the length of array a. It is guaranteed that the sum of values of n over all test cases in the input does not exceed 10^{5}.\n\nThe second line of each test case contains n integers a_{1}, a_{2}, \u2026, a_{n} (-10^{9} \u2264 a_{i} \u2264 10^{9}).", "testcase": ["1\n3\n-1000000000 0 1000000000", "2\n3\n-500000000 500000000 0\n4\n-1 1 -1 1", "1\n5\n100 200 300 -500 -100", "3\n3\n0 0 0\n3\n1 2 3\n4\n10 -10 5 -5", "2\n4\n-1000 -1000 1000 1000\n5\n1000000000 -1000000000 0 500000000 -500000000", "1\n6\n-1000000000 -500000000 0 500000000 750000000 1000000000", "2\n3\n1 1 1\n4\n-1000000000 -500000000 500000000 1000000000", "1\n7\n1 -1 2 -2 3 -3 0", "3\n3\n-1 -2 -3\n4\n10 20 -10 -20\n5\n-1000000000 0 1000000000 -500000000 500000000", "2\n5\n1 2 3 4 5\n6\n-5 -4 -3 -2 -1 0"]}
{"name": "1420_A. Cubes Sorting", "specification": "Input\n\nEach test contains multiple test cases.\n\nThe first line contains one positive integer t (1 \u2264 t \u2264 1000), denoting the number of test cases. Description of the test cases follows.\n\nThe first line of each test case contains one positive integer n (2 \u2264 n \u2264 5 \u22c5 10^4) \u2014 number of cubes.\n\nThe second line contains n positive integers a_i (1 \u2264 a_i \u2264 10^9) \u2014 volumes of cubes.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 10^5.", "testcase": ["2\n4\n2 3 4 5\n5\n10 20 30 40 50", "3\n6\n5 4 3 2 1 6\n3\n7 8 9\n2\n100 200", "1\n5\n1 2 3 4 5", "4\n2\n1000 2000\n3\n3000 4000 5000\n2\n6000 7000\n3\n8000 9000 10000", "2\n4\n1 2 3 4\n5\n5 6 7 8 9", "1\n8\n10 20 30 40 50 60 70 80", "1\n10\n1 2 3 4 5 6 7 8 9 10", "2\n4\n10 11 12 13\n6\n14 15 16 17 18 19", "1\n5\n10000 20000 30000 40000 50000", "2\n2\n1000000000 999999999\n5\n1 2 3 4 5"]}
{"name": "1436_A. Reorder", "specification": "Input\n\nThe first line contains a single integer t \u2014 the number of test cases (1 \u2264 t \u2264 100). The test cases follow, each in two lines.\n\nThe first line of a test case contains two integers n and m (1 \u2264 n \u2264 100, 0 \u2264 m \u2264 10^6). The second line contains integers a_1, a_2, \u2026, a_n (0 \u2264 a_i \u2264 10^6) \u2014 the elements of the array.", "testcase": ["1\n2 1000\n0 1000", "1\n5 10000\n5000 2000 3000 4000 1000", "1\n3 500000\n0 250000 500000", "1\n4 100000\n25000 50000 75000 100000", "1\n10 1000000\n100000 200000 300000 400000 500000 600000 700000 800000 900000 1000000", "2\n3 99999\n33333 66666 99999\n4 888888\n222222 444444 666666 888888", "1\n6 50000\n10000 20000 30000 40000 50000 0", "1\n7 700000\n100000 200000 300000 400000 500000 600000 700000", "1\n8 8000\n1000 2000 3000 4000 5000 6000 7000 8000", "2\n5 123456\n12345 23456 34567 45678 56789\n6 654321\n108873 217746 326619 435492 544365 653238"]}
{"name": "835_A. Key races", "specification": "Input\n\nThe first line contains five integers s, v1, v2, t1, t2 (1 \u2264 s, v1, v2, t1, t2 \u2264 1000) \u2014 the number of characters in the text, the time of typing one character for the first participant, the time of typing one character for the the second participant, the ping of the first participant and the ping of the second participant.", "testcase": ["100 5 6 10 20", "200 10 8 30 40", "500 2 3 5 6", "300 15 10 20 15", "800 20 25 10 30", "150 7 8 25 20", "900 10 9 15 18", "700 8 7 10 12", "400 5 4 20 25", "600 12 11 15 20"]}
{"name": "1419_A. Digit Game", "specification": "Input\n\nFirst line of input contains an integer t (1 \u2264 t \u2264 100) \u2014 the number of matches.\n\nThe first line of each match description contains an integer n (1 \u2264 n \u2264 10^3) \u2014 the number of digits of the generated number.\n\nThe second line of each match description contains an n-digit positive integer without leading zeros.", "testcase": ["1\n5\n12345", "2\n3\n456\n4\n7890", "3\n2\n12\n3\n345\n5\n67890", "1\n7\n1234567", "2\n8\n12345678\n6\n987654", "4\n2\n34\n3\n567\n4\n8912\n5\n34567", "1\n10\n1234567890", "3\n4\n1234\n5\n56789\n6\n908172", "2\n7\n7654321\n8\n98765432", "1\n9\n123456789"]}
{"name": "p03434 AtCoder Beginner Contest 088 - Card Game for Two", "specification": "Constraints\n\n* N is an integer between 1 and 100 (inclusive).\n* a_i \\ (1 \\leq i \\leq N) is an integer between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 a_3 ... a_N", "testcase": ["1\n50", "5\n1 2 3 4 5", "10\n10 20 30 40 50 60 70 80 90 100", "2\n99 100", "6\n45 76 12 89 5 34", "4\n23 67 45 89", "3\n1 50 100", "7\n21 43 65 87 34 56 78", "8\n12 24 36 48 60 72 84 96", "3\n33 66 99"]}
{"name": "1294_B. Collecting Packages", "specification": "Input\n\nThe first line of the input contains an integer t (1 \u2264 t \u2264 100) \u2014 the number of test cases. Then test cases follow.\n\nThe first line of a test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of packages.\n\nThe next n lines contain descriptions of packages. The i-th package is given as two integers x_i and y_i (0 \u2264 x_i, y_i \u2264 1000) \u2014 the x-coordinate of the package and the y-coordinate of the package.\n\nIt is guaranteed that there are no two packages at the same point. It is also guaranteed that the point (0, 0) doesn't contain a package.\n\nThe sum of all values n over test cases in the test doesn't exceed 1000.", "testcase": ["1\n5\n1 1\n2 2\n3 3\n4 4\n5 5", "2\n2\n1 2\n2 1\n3\n3 3\n4 4\n5 5", "1\n4\n10 20\n30 40\n50 60\n70 80", "3\n1\n100 100\n2\n200 200\n300 300\n3\n400 400\n500 500\n600 600", "2\n5\n100 500\n200 600\n300 700\n400 800\n500 900\n4\n50 100\n150 200\n250 300\n350 400", "1\n3\n111 222\n333 444\n555 666", "2\n2\n123 456\n789 101\n2\n112 334\n556 778", "1\n3\n1000 1000\n900 900\n800 800", "2\n4\n100 200\n300 400\n500 600\n700 800\n1\n123 321", "1\n2\n567 765\n432 234"]}
{"name": "p03994 CODE FESTIVAL 2016 qual A - Next Letter", "specification": "Constraints\n\n* 1\u2264|s|\u226410^5\n* All letters in s are lowercase English letters.\n* 1\u2264K\u226410^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\nK", "testcase": ["abc\n10", "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd", "xyz\n1", "abcdefghijklmnopqrstuvwxyz\n123456789", "hello\n500000000", "openai\n987654321", "gptfour\n222222222", "machinelearning\n100000000", "naturallanguageprocessing\n345678901", "deeplearning\n999999999"]}
{"name": "119_A. Epic Game", "specification": "Input\n\nThe only string contains space-separated integers a, b and n (1 \u2264 a, b, n \u2264 100) \u2014 the fixed numbers Simon and Antisimon have received correspondingly and the initial number of stones in the pile.", "testcase": ["1 2 50", "5 10 100", "99 100 1", "45 67 89", "23 45 67", "12 34 56", "78 91 100", "33 66 99", "17 34 68", "50 50 50"]}
{"name": "p02926 AtCoder Beginner Contest 139 - Engines", "specification": "Constraints\n\n* 1 \\leq N \\leq 100\n* -1 \\ 000 \\ 000 \\leq x_i \\leq 1 \\ 000 \\ 000\n* -1 \\ 000 \\ 000 \\leq y_i \\leq 1 \\ 000 \\ 000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\nx_2 y_2\n: :\nx_N y_N", "testcase": ["1\n0 0", "2\n-1000000 -1000000\n1000000 1000000", "3\n500000 500000\n-500000 -500000\n0 0", "5\n999999 -999999\n-999999 999999\n0 0\n500000 -500000\n-500000 500000", "4\n1 1\n-1 -1\n1000000 -1000000\n-1000000 1000000", "10\n0 0\n100 100\n-100 -100\n1000 1000\n-1000 -1000\n10000 10000\n-10000 -10000\n100000 100000\n-100000 -100000\n1000000 -1000000", "6\n-500000 0\n0 500000\n-100000 100000\n100000 -100000\n500000 0\n0 -500000", "6\n-500000 0\n0 500000\n-100000 100000\n100000 -100000\n500000 0\n0 -500000", "7\n1000000 0\n-1000000 0\n0 1000000\n0 -1000000\n500000 500000\n-500000 -500000\n0 0", "8\n0 0\n100000 100000\n-100000 -100000\n500000 500000\n-500000 -500000\n1000000 1000000\n-1000000 -1000000\n1000000 -1000000", "5\n1000000 1000000\n-1000000 -1000000\n500000 -500000\n0 0\n-500000 500000"]}
{"name": "1430_B. Barrels", "specification": "Input\n\nThe first line contains one integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nThe first line of each test case contains two integers n and k (1 \u2264 k < n \u2264 2 \u22c5 10^5) \u2014 the number of barrels and the number of pourings you can make.\n\nThe second line contains n integers a_1, a_2, ..., a_n (0 \u2264 a_i \u2264 10^{9}), where a_i is the initial amount of water the i-th barrel has.\n\nIt's guaranteed that the total sum of n over test cases doesn't exceed 2 \u22c5 10^5.", "testcase": ["1\n5 2\n0 1000 500 2000 1500", "1\n4 1\n400 800 200 600", "1\n10 3\n0 500 1000 1500 2000 2500 3000 3500 4000 4500", "1\n3 2\n100 200 300", "1\n7 3\n0 2000 4000 6000 8000 10000 12000", "1\n6 2\n100 200 300 400 500 600", "1\n8 4\n0 500 1000 1500 2000 2500 3000 3500", "1\n9 5\n1000 900 800 700 600 500 400 300 200", "1\n15 7\n0 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 1400", "1\n2 1\n1000000000 0"]}
{"name": "p02811 AtCoder Beginner Contest 150 - 500 Yen Coins", "specification": "Constraints\n\n* 1 \\leq K \\leq 100\n* 1 \\leq X \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK X", "testcase": ["1 1", "5 2000", "10 5000", "20 10000", "25 25000", "50 50000", "75 75000", "100 100000", "33 33333", "99 99999"]}
{"name": "p03293 AtCoder Beginner Contest 103 - String Rotation", "specification": "Constraints\n\n* 2 \\leq |S| \\leq 100\n* |S| = |T|\n* S and T consist of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT", "testcase": ["abc\nabc", "xyz\nzyx", "hello\nworld", "abcd\ndcba", "kite\nitek", "mnop\nponm", "test\ntset", "qwer\nrewq", "apple\nelppa", "banana\nananab"]}
{"name": "999_A. Mishka and Contest", "specification": "Input\n\nThe first line of input contains two integers n and k (1 \u2264 n, k \u2264 100) \u2014 the number of problems in the contest and Mishka's problem-solving skill.\n\nThe second line of input contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 100), where a_i is the difficulty of the i-th problem. The problems are given in order from the leftmost to the rightmost in the list.", "testcase": ["5 3\n1 2 3 4 5", "10 5\n5 10 15 20 25 30 35 40 45 50", "7 4\n7 6 5 4 3 2 1", "2 1\n1 100", "3 2\n50 50 50", "4 4\n10 20 30 40", "6 3\n60 70 80 90 100 50", "8 7\n15 25 35 45 55 65 75 85", "9 5\n9 8 7 6 5 4 3 2 1", "10 10\n100 90 80 70 60 50 40 30 20 10"]}
{"name": "1114_A. Got Any Grapes?", "specification": "Input\n\nThe first line contains three integers x, y and z (1 \u2264 x, y, z \u2264 10^5) \u2014 the number of grapes Andrew, Dmitry and Michal want to eat.\n\nThe second line contains three integers a, b, c (1 \u2264 a, b, c \u2264 10^5) \u2014 the number of green, purple and black grapes in the box.", "testcase": ["10 20 30\n40 50 60", "1 1 1\n1000 1000 1000", "50000 50000 50000\n60000 70000 80000", "12345 67890 23456\n23456 78901 34567", "100000 100000 100000\n100000 100000 100000", "33333 33334 33333\n50000 50000 50000", "25000 25000 25000\n50000 50000 25000", "9999 8888 7777\n15000 14000 13000", "2 3 4\n6 7 8", "10 10 10\n20 20 20"]}
{"name": "p02749 Social Infrastructure Information Systems Division  Hitachi Programming Contest 2020 - ThREE", "specification": "Constraints\n\n* 2\\leq N\\leq 2\\times 10^5\n* 1\\leq a_i, b_i \\leq N\n* The given graph is a tree.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1\na_2 b_2\n\\vdots\na_{N-1} b_{N-1}", "testcase": ["3\n1 2\n2 3", "4\n1 2\n2 3\n3 4", "5\n1 2\n1 3\n3 4\n3 5", "6\n1 2\n1 3\n2 4\n2 5\n5 6", "7\n1 2\n2 3\n2 4\n3 5\n3 6\n4 7", "8\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n5 8", "5\n1 2\n2 3\n3 4\n4 5", "6\n1 2\n1 3\n3 4\n4 5\n4 6", "7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7", "8\n1 2\n1 3\n2 4\n3 5\n5 6\n5 7\n7 8"]}
{"name": "p02698 AtCoder Beginner Contest 165 - LIS on Tree", "specification": "Constraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq a_i \\leq 10^9\n* 1 \\leq u_i , v_i \\leq N\n* u_i \\neq v_i\n* The given graph is a tree.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\nu_1 v_1\nu_2 v_2\n:\nu_{N-1} v_{N-1}", "testcase": ["3\n1 2 3\n1 2\n2 3", "4\n1 100 1000 10000\n1 2\n1 3\n1 4", "5\n5 10 15 20 25\n1 2\n2 3\n3 4\n4 5", "6\n100 200 300 400 500 600\n1 2\n1 3\n2 4\n2 5\n3 6", "7\n10 20 30 40 50 60 70\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7", "5\n1000000000 500000000 250000000 125000000 62500000\n1 2\n1 3\n2 4\n4 5", "8\n1 2 4 8 16 32 64 128\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n5 8", "6\n10 100 1000 10000 100000 1000000\n1 2\n2 3\n2 4\n3 5\n3 6", "7\n100 90 80 70 60 50 40\n1 2\n1 3\n1 4\n4 5\n4 6\n4 7", "10\n1 2 3 4 5 6 7 8 9 10\n1 2\n2 3\n2 4\n3 5\n5 6\n5 7\n7 8\n7 9\n9 10"]}
{"name": "1393_A. Rainbow Dash, Fluttershy and Chess Coloring", "specification": "Input\n\nThe first line contains a single integer T (1 \u2264 T \u2264 100): the number of grids of the games. \n\nEach of the next T lines contains a single integer n (1 \u2264 n \u2264 10^9): the size of the side of the grid of the game.", "testcase": ["1\n5", "2\n10\n20", "3\n500000000\n700000000\n800000000", "4\n15\n25\n35\n45", "5\n1000000000\n50000000\n750000000\n250000000\n900000000", "1\n999999999", "3\n333333333\n666666666\n999999999", "4\n1000000\n10000000\n100000000\n1000000000", "2\n500000000\n1000000000", "5\n123456789\n234567890\n345678901\n456789012\n567890123"]}
{"name": "1249_B1. Books Exchange (easy version)", "specification": "Input\n\nThe first line of the input contains one integer q (1 \u2264 q \u2264 200) \u2014 the number of queries. Then q queries follow.\n\nThe first line of the query contains one integer n (1 \u2264 n \u2264 200) \u2014 the number of kids in the query. The second line of the query contains n integers p_1, p_2, ..., p_n (1 \u2264 p_i \u2264 n, all p_i are distinct, i.e. p is a permutation), where p_i is the kid which will get the book of the i-th kid.", "testcase": ["1\n3\n1 3 2", "2\n2\n1 2\n4\n4 3 2 1", "1\n5\n5 4 3 2 1", "2\n3\n2 3 1\n5\n1 2 3 4 5", "1\n6\n6 5 4 3 2 1", "2\n4\n4 1 3 2\n2\n2 1", "1\n5\n2 1 3 5 4", "2\n3\n3 1 2\n6\n1 3 2 6 5 4", "1\n7\n7 6 5 4 3 2 1", "2\n5\n4 5 3 2 1\n4\n1 2 3 4"]}
{"name": "1288_A. Deadline", "specification": "Input\n\nThe first line contains a single integer T (1 \u2264 T \u2264 50) \u2014 the number of test cases.\n\nThe next T lines contain test cases \u2013 one per line. Each line contains two integers n and d (1 \u2264 n \u2264 10^9, 1 \u2264 d \u2264 10^9) \u2014 the number of days before the deadline and the number of days the program runs.", "testcase": ["10\n1 1\n100 50\n500000000 400000000\n1000000000 999999999\n999999999 1\n10 5\n100000 50000\n700000000 700000000\n123456789 987654321\n500 499"]}
{"name": "p02594 AtCoder Beginner Contest 174 - Air Conditioner", "specification": "Constraints\n\n* -40 \\leq X \\leq 40\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX", "testcase": ["-40", "-30", "-15", "0", "10", "20", "30", "35", "40", "25"]}
{"name": "p03105 AtCoder Beginner Contest 120 - Favorite Sound", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq A, B, C \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C", "testcase": ["1 1 1", "50 50 50", "100 100 100", "23 45 67", "89 12 34", "77 88 99", "2 2 2", "33 66 99", "11 22 33", "15 30 45"]}
{"name": "1213_B. Bad Prices", "specification": "Input\n\nThe first line contains an integer t (1 \u2264 t \u2264 10000) \u2014 the number of sets of input data in the test. Input data sets must be processed independently, one after another.\n\nEach input data set consists of two lines. The first line contains an integer n (1 \u2264 n \u2264 150000) \u2014 the number of days. The second line contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^6), where a_i is the price on the i-th day.\n\nIt is guaranteed that the sum of n over all data sets in the test does not exceed 150000.", "testcase": ["1\n5\n1 2 3 4 5", "2\n3\n1000000 500000 250000\n4\n1 10 100 1000", "1\n7\n5000 4500 5500 6000 5000 4500 4200", "2\n5\n200 400 600 800 1000\n3\n500 700 900", "1\n10\n10000 20000 15000 18000 21000 24000 27000 30000 33000 36000", "3\n2\n500000 600000\n2\n700000 800000\n1\n400000", "1\n8\n8000 7000 6000 7500 8900 9400 9900 10000", "2\n4\n100000 200000 300000 400000\n2\n500000 600000", "1\n6\n100000 150000 200000 250000 300000 350000", "2\n5\n50000 100000 150000 200000 250000\n3\n300000 350000 400000"]}
{"name": "1427_A. Avoiding Zero", "specification": "Input\n\nEach test contains multiple test cases. The first line contains an integer t (1\u2264 t \u2264 1000) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each testcase contains one integer n (1\u2264 n\u2264 50) \u2014 the length of the array a.\n\nThe second line of each testcase contains n integers a_1,a_2,..., a_n (-50\u2264 a_i\u2264 50) \u2014 the elements of a.", "testcase": ["1\n5\n10 20 30 40 50", "2\n3\n-50 -25 0\n4\n50 25 0 -25", "3\n1\n0\n2\n-50 50\n5\n-25 -10 0 10 25", "1\n10\n-50 -40 -30 -20 -10 0 10 20 30 40", "2\n5\n-5 -4 -3 -2 -1\n5\n1 2 3 4 5", "3\n2\n-50 0\n3\n25 -25 50\n4\n10 -10 30 -30", "4\n3\n1 2 3\n4\n-1 -2 -3 -4\n5\n0 5 10 15 20\n6\n-5 -10 -15 -20 -25 -30", "1\n7\n-50 -30 0 15 25 35 50", "2\n5\n-20 -10 0 10 20\n3\n-30 0 30", "1\n10\n-10 -5 0 5 10 15 20 25 30 35"]}
{"name": "p02628 AtCoder Beginner Contest 171 - Mix Juice", "specification": "Constraints\n\n* 1 \\leq K \\leq N \\leq 1000\n* 1 \\leq p_i \\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\np_1 p_2 \\ldots p_N", "testcase": ["2 1\n1 1000", "5 3\n200 400 600 800 1000", "3 2\n5 10 15", "4 2\n50 100 150 200", "10 5\n10 20 30 40 50 60 70 80 90 100", "6 4\n123 456 789 234 567 890", "7 3\n100 200 300 400 500 600 700", "8 4\n12 34 56 78 90 123 456 789", "9 5\n111 222 333 444 555 666 777 888 999", "10 10\n1000 900 800 700 600 500 400 300 200 100"]}
{"name": "1257_B. Magic Stick", "specification": "Input\n\nThe first line contains single integer T (1 \u2264 T \u2264 10^4) \u2014 the number of test cases. Each test case consists of two lines.\n\nThe first line of each test case contains two integers x and y (1 \u2264 x, y \u2264 10^9) \u2014 the current number and the number that Petya wants to get.", "testcase": ["2\n1 5\n10 20", "2\n123 456\n789 1000", "2\n500000000 999999999\n100 500", "2\n1 999999999\n250000000 750000000", "2\n34567 76543\n987654321 123456789", "2\n999999999 1\n500000000 500000001", "2\n100000000 200000000\n300000000 400000000", "2\n111111111 222222222\n333333333 444444444", "2\n1 1000000000\n999999999 1000000000", "2\n500 1000\n10000 20000"]}
{"name": "p02397 Swapping Two Numbers", "specification": "Constraints\n\n* 0 \u2264 x, y \u2264 10000\n* the number of datasets \u2264 3000\n\nInput\n\nThe input consists of multiple datasets. Each dataset consists of two integers x and y separated by a single space.\n\nThe input ends with two 0 (when both x and y are zero). Your program should not process for these terminal symbols.", "testcase": ["1 1", "5000 5000", "10000 10000", "0 10000", "10000 0", "1234 5678", "9876 5432", "1111 2222", "3333 4444", "5555 6666"]}
{"name": "1144_B. Parity Alternated Deletions", "specification": "Input\n\nThe first line of the input contains one integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements of a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (0 \u2264 a_i \u2264 10^6), where a_i is the i-th element of a.", "testcase": ["1\n1000000", "5\n0 1 2 3 4", "10\n100000 200000 300000 400000 500000 600000 700000 800000 900000 1000000", "2\n500000 500000", "3\n333333 666666 999999", "4\n0 250000 500000 750000", "6\n100000 200000 300000 400000 500000 600000", "8\n125000 250000 375000 500000 625000 750000 875000 1000000", "7\n0 200000 400000 600000 800000 1000000 150000", "9\n111111 222222 333333 444444 555555 666666 777777 888888 999999"]}
{"name": "p02724 AtCoder Beginner Contest 160 - Golden Coins", "specification": "Constraints\n\n* 0 \\leq X \\leq 10^9\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX", "testcase": ["0", "1", "100", "1000000", "999999999", "500000000", "123456789", "987654321", "1000000000", "750000000"]}
{"name": "p03592 CODE FESTIVAL 2017 qual A - fLIP", "specification": "Constraints\n\n* 1 \\leq N,M \\leq 1000\n* 0 \\leq K \\leq NM\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M K", "testcase": ["1 1 0", "2 2 1", "10 20 50", "500 500 250000", "1000 1000 1000000", "3 5 12", "200 300 60000", "999 1000 999000", "123 456 56088", "321 654 210384"]}
{"name": "1230_B. Ania and Minimizing", "specification": "Input\n\nThe first line contains two integers n and k (1 \u2264 n \u2264 200 000, 0 \u2264 k \u2264 n) \u2014 the number of digits in the decimal representation of S and the maximum allowed number of changed digits.\n\nThe second line contains the integer S. It's guaranteed that S has exactly n digits and doesn't contain any leading zeroes.", "testcase": ["2 1\n12", "5 2\n12345", "3 0\n999", "6 3\n111222", "4 4\n5678", "7 2\n1234567", "8 5\n98765432", "9 0\n123456789", "10 5\n9876543210", "6 6\n222222"]}
{"name": "1436_B. Prime Square", "specification": "Input\n\nThe first line contains a single integer t (1 \u2264 t \u2264 10) \u2014 the number of test cases.\n\nEach of the next t lines contains a single integer n (2 \u2264 n \u2264 100) \u2014 the required size of a square.", "testcase": ["1\n5", "2\n10\n20", "3\n2\n50\n100", "4\n25\n30\n35\n40", "5\n11\n12\n13\n14\n15", "6\n20\n21\n22\n23\n24\n25", "7\n5\n10\n15\n20\n25\n30\n35", "8\n40\n45\n50\n55\n60\n65\n70\n75", "9\n9\n18\n27\n36\n45\n54\n63\n72\n81", "10\n6\n12\n18\n24\n30\n36\n42\n48\n54\n60"]}
{"name": "p02417 Counting Characters", "specification": "Constraints\n\n* The number of characters in the sentence < 1200\n\nInput\n\nA sentence in English is given in several lines.", "testcase": ["Hello, world!\nThis is a basic test case.", "A sentence with numbers 12345 and special characters !@#$%^&*().\nAnother sentence to make multi-line input.", "Short.\nAnother short.", "This sentence is designed to test the maximum character limit.\n" + "A" * 1150", "This is to test edge cases like a very long word: " + "A"*500 + ".\nIs it handled correctly?", "Empty lines should also be\n\n\nconsidered as part of the input.", "Testing with different types of punctuation, such as: commas, periods, exclamation marks, question marks, etc.!\nDoes it handle all of them well?", "Unicode characters are also valid input: こんにちは世界\nIs it processing them correctly?", "Mix of upper and lower case letters to TEST case sensitivity.\nEnsuring Both Cases Are Handled Appropriately.", "Using escape characters like \\n, \\t, \\r within the sentence to see if it's handled properly.\nChecking the response."]}
{"name": "598_A. Tricky Sum", "specification": "Input\n\nThe first line of the input contains a single integer t (1 \u2264 t \u2264 100) \u2014 the number of values of n to be processed.\n\nEach of next t lines contains a single integer n (1 \u2264 n \u2264 10^9).", "testcase": ["1\n1", "2\n500000000\n1000000000", "3\n100\n1000\n10000", "4\n123456789\n987654321\n111111111\n222222222", "5\n1\n2\n3\n4\n5", "2\n999999999\n1000000000", "3\n5000000\n7500000\n2500000", "4\n1000000\n2000000\n3000000\n4000000", "5\n12345678\n87654321\n11111111\n99999999\n55555555", "3\n333333333\n666666666\n999999999"]}
{"name": "p03219 AtCoder Beginner Contest 113 - Discount Fare", "specification": "Constraints\n\n* 1 \\leq X,Y \\leq 100\n* Y is an even number.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y", "testcase": ["1 2", "5 10", "99 44", "100 100", "50 50", "13 24", "88 66", "43 86", "72 48", "25 98"]}
{"name": "p03327 AtCoder Beginner Contest 099 - ABD", "specification": "Constraints\n\n* 1 \\leq N \\leq 1998\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN", "testcase": ["1", "999", "1998", "500", "1000", "1500", "250", "750", "1250", "1750"]}
{"name": "255_A. Greg's Workout", "specification": "Input\n\nThe first line contains integer n (1 \u2264 n \u2264 20). The second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264 25) \u2014 the number of times Greg repeats the exercises.", "testcase": ["2\n3 5", "4\n1 2 3 4", "5\n5 10 15 20 25", "3\n7 14 21", "6\n6 12 18 24 5 10", "1\n15", "7\n1 3 5 7 9 11 13", "8\n8 7 6 5 4 3 2 1", "10\n10 9 8 7 6 5 4 3 2 1", "9\n2 4 6 8 10 12 14 16 18"]}
{"name": "p03761 AtCoder Beginner Contest 058 - Dubious Document", "specification": "Constraints\n\n* 1 \\leq n \\leq 50\n* 1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\n* S_i consists of lowercase English letters (`a` - `z`) for every i = 1, ..., n.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\nS_1\n...\nS_n", "testcase": ["1\na", "2\na\nz", "2\nab\nyz", "3\nabc\nmno\nxyz", "4\na\nbb\nccc\ndddd", "5\naaaaa\nbbbbb\nccccc\nddddd\neeeee", "3\nabcde\nfghij\nklmno", "4\nabcd\nbcda\ncdab\ndabc", "6\nz\nyy\nxxx\nwwww\nvvvvv\nuuuuuu", "2\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwx\nzyxwvutsrqponmlkjihgfedcba"]}
{"name": "746_A. Compote", "specification": "Input\n\nThe first line contains the positive integer a (1 \u2264 a \u2264 1000) \u2014 the number of lemons Nikolay has. \n\nThe second line contains the positive integer b (1 \u2264 b \u2264 1000) \u2014 the number of apples Nikolay has. \n\nThe third line contains the positive integer c (1 \u2264 c \u2264 1000) \u2014 the number of pears Nikolay has.", "testcase": ["10\n20\n30", "1\n1\n1", "500\n500\n500", "999\n1000\n1000", "100\n200\n300", "250\n750\n500", "333\n666\n999", "1000\n1000\n1000", "101\n202\n303", "400\n600\n800"]}
{"name": "766_B. Mahmoud and a Triangle", "specification": "Input\n\nThe first line contains single integer n (3 \u2264 n \u2264 10^5) \u2014 the number of line segments Mahmoud has.\n\nThe second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264 10^9) \u2014 the lengths of line segments Mahmoud has.", "testcase": ["3\n1 2 3", "4\n10 20 30 40", "5\n1000000000 500000000 250000000 125000000 62500000", "6\n100 200 300 400 500 600", "7\n1 1 1 1 1 1 1", "8\n2 4 8 16 32 64 128 256", "9\n999999999 888888888 777777777 666666666 555555555 444444444 333333333 222222222 111111111", "10\n10 9 8 7 6 5 4 3 2 1", "11\n100 200 300 400 500 600 700 800 900 1000 1100", "12\n1 2 3 4 5 6 7 8 9 10 11 12"]}
{"name": "1352_F. Binary String Reconstruction", "specification": "Input\n\nThe first line contains an integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases in the input. Then test cases follow.\n\nEach test case consists of one line which contains three integers n_0, n_1, n_2 (0 \u2264 n_0, n_1, n_2 \u2264 100; n_0 + n_1 + n_2 > 0). It is guaranteed that the answer for given n_0, n_1, n_2 exists.", "testcase": ["5\n10 5 2\n0 5 10\n20 30 50\n3 0 0\n7 8 5", "3\n15 15 15\n10 5 1\n5 5 5", "4\n0 10 0\n5 0 5\n1 1 1\n0 50 50", "2\n10 20 30\n0 0 100", "4\n25 25 25\n0 50 0\n10 10 5\n5 5 90", "3\n0 75 25\n50 40 10\n30 0 70", "5\n0 25 75\n33 33 34\n0 100 0\n50 0 50\n5 5 5", "3\n40 20 40\n0 50 0\n70 20 10", "2\n15 70 15\n0 0 100", "4\n20 20 60\n0 40 60\n33 33 34\n10 0 90"]}
{"name": "p02898 AtCoder Beginner Contest 142 - Roller Coaster", "specification": "Constraints\n\n* 1 \\le N \\le 10^5\n* 1 \\le K \\le 500\n* 1 \\le h_i \\le 500\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nh_1 h_2 \\ldots h_N", "testcase": ["2 1\n150 200", "5 3\n450 300 250 400 100", "10 5\n50 100 150 200 250 300 350 400 450 500", "3 2\n200 300 400", "4 3\n100 200 300 400", "7 5\n100 200 100 200 100 200 100", "8 4\n500 400 300 200 100 50 25 450", "6 2\n100 150 200 250 300 350", "9 5\n300 400 200 300 400 500 200 300 100", "1 1\n500"]}
{"name": "476_B. Dreamoon and WiFi", "specification": "Input\n\nThe first line contains a string s1 \u2014 the commands Drazil sends to Dreamoon, this string consists of only the characters in the set {'+', '-'}. \n\nThe second line contains a string s2 \u2014 the commands Dreamoon's smartphone recognizes, this string consists of only the characters in the set {'+', '-', '?'}. '?' denotes an unrecognized command.\n\nLengths of two strings are equal and do not exceed 10.", "testcase": ["+-+-\n+-+-", "++--\n++--", "----\n----", "++++\n????", "---+\n??-+", "++--\n+?+?", "--++\n--??", "++-+\n??-+", "--++\n-?+?", "+-++\n+???"]}
{"name": "621_A. Wet Shark and Odd and Even", "specification": "Input\n\nThe first line of the input contains one integer, n (1 \u2264 n \u2264 100 000). The next line contains n space separated integers given to Wet Shark. Each of these integers is in range from 1 to 10^9, inclusive.", "testcase": ["5\n1 2 3 4 5", "10\n1000000000 999999999 888888888 777777777 666666666 555555555 444444444 333333333 222222222 111111111", "1\n1", "20\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1", "2\n1000000000 500000000", "6\n123456789 987654321 111111111 222222222 333333333 444444444", "3\n7 14 21", "15\n15 30 45 60 75 90 105 120 135 150 165 180 195 210 225", "4\n250000000 500000000 750000000 1000000000", "7\n999999993 999999994 999999995 999999996 999999997 999999998 999999999"]}
{"name": "1166_A. Silent Classroom", "specification": "Input\n\nThe first line contains a single integer n (1\u2264 n \u2264 100) \u2014 the number of students.\n\nAfter this n lines follow.\n\nThe i-th line contains the name of the i-th student.\n\nIt is guaranteed each name is a string of lowercase English letters of length at most 20. Note that multiple students may share the same name.", "testcase": ["1\nalice", "2\nalice\nbob", "3\nalice\nbob\ncharlie", "5\nalice\nbob\nalice\ncharlie\ndave", "4\njane\njane\ndoe\ndoe", "6\njohn\njohn\njohn\njane\njane\njane", "7\nmike\ntom\njerry\nmike\ntom\njerry\nalex", "8\nalex\nbob\ncarol\ndave\neve\nfrank\ngreg\nhank", "10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj", "9\nana\nbob\ncat\ndog\nele\nfox\ngal\nhen\nivy"]}
{"name": "p02801 AtCoder Beginner Contest 151 - Next Alphabet", "specification": "Constraints\n\n* C is a lowercase English letter that is not `z`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nC", "testcase": ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"]}
{"name": "937_A. Olympiad", "specification": "Input\n\nThe first line contains a single integer n (1 \u2264 n \u2264 100) \u2014 the number of participants.\n\nThe next line contains a sequence of n integers a1, a2, ..., an (0 \u2264 ai \u2264 600) \u2014 participants' scores.\n\nIt's guaranteed that at least one participant has non-zero score.", "testcase": ["2\n100 200", "5\n0 0 0 0 500", "3\n300 400 500", "4\n0 600 0 600", "10\n0 0 0 0 0 0 0 0 0 600", "6\n100 200 300 400 500 600", "7\n0 0 0 0 0 0 550", "8\n0 50 100 150 200 250 300 350", "9\n600 500 400 300 200 100 50 25 12", "1\n600"]}
{"name": "p03307 AtCoder Beginner Contest 102 - Multiple of 2 and N", "specification": "Constraints\n\n* 1 \\leq N \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN", "testcase": ["1", "1000000000", "500000000", "250000000", "100", "123456789", "987654321", "111111111", "999999999", "543210987"]}
{"name": "1324_D. Pair of Topics", "specification": "Input\n\nThe first line of the input contains one integer n (2 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the number of topics.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^9), where a_i is the interestingness of the i-th topic for the teacher.\n\nThe third line of the input contains n integers b_1, b_2, ..., b_n (1 \u2264 b_i \u2264 10^9), where b_i is the interestingness of the i-th topic for the students.", "testcase": ["3\n2 5 3\n1 4 6", "4\n1 2 3 4\n4 3 2 1", "5\n100 200 300 400 500\n500 400 300 200 100", "2\n1000000000 999999999\n1 2", "6\n10 20 30 40 50 60\n60 50 40 30 20 10", "4\n50 100 150 200\n200 150 100 50", "3\n100 50 75\n50 75 100", "5\n1000 10000 100000 1000000 10000000\n10000000 1000000 100000 10000 1000", "7\n7 14 21 28 35 42 49\n49 42 35 28 21 14 7", "2\n1 1000000000\n1000000000 1"]}
{"name": "p03346 AtCoder Grand Contest 024 - Backfront", "specification": "Constraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* (P_1,P_2,...,P_N) is a permutation of (1,2,...,N).\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nP_1\n:\nP_N", "testcase": ["5\n1\n2\n3\n4\n5", "3\n3\n1\n2", "4\n4\n3\n2\n1", "2\n2\n1", "1\n1", "6\n6\n5\n4\n3\n2\n1", "7\n1\n3\n5\n7\n2\n4\n6", "8\n8\n7\n6\n5\n4\n3\n2\n1", "9\n1\n2\n3\n4\n5\n6\n7\n8\n9", "10\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1"]}
{"name": "1265_A. Beautiful String", "specification": "Input\n\nThe first line contains positive integer t (1 \u2264 t \u2264 1000) \u2014 the number of test cases. Next t lines contain the descriptions of test cases.\n\nEach line contains a non-empty string s consisting of only characters 'a', 'b', 'c' and '?'. \n\nIt is guaranteed that in each test case a string s has at least one character '?'. The sum of lengths of strings s in all test cases does not exceed 10^5.", "testcase": ["1\na?", "2\n??\nb?a", "3\n??c\na?b\nc?", "4\n?b\n?a\nb?\nc?a", "5\nabc?\n?abc\na?b?\nab?c\n???", "6\n?ab?\n???\na???\n??c?\nb??", "7\nabc??\n?a?b?\n?bc\nab???\n????\nbc?a\n?", "8\n?a\n??\n???\n????\nbc???\na?b?\nb?c?\n???c", "9\na?b?c\n???\n??b?\nc???\nb?a??\n?a??b?\n??c?\n?bc?a\n?abc", "10\na??\n?b?\n???\n?bc\nabc?\na?b?\nbc?a\nb??c?\na??b?\n?"]}
{"name": "1110_A. Parity", "specification": "Input\n\nThe first line contains two integers b and k (2\u2264 b\u2264 100, 1\u2264 k\u2264 10^5) \u2014 the base of the number and the number of digits.\n\nThe second line contains k integers a_1, a_2, \u2026, a_k (0\u2264 a_i < b) \u2014 the digits of n.\n\nThe representation of n contains no unnecessary leading zero. That is, a_1 can be equal to 0 only if k = 1.", "testcase": ["10 5\n5 4 3 2 1", "2 4\n1 0 1 0", "16 6\n15 14 0 1 2 3", "8 7\n7 6 5 4 3 2 1", "3 3\n2 1 0", "5 2\n4 3", "6 4\n5 3 1 0", "7 5\n6 5 4 2 1", "9 3\n8 1 0", "4 1\n2"]}
{"name": "439_A. Devu, the Singer and Churu, the Joker", "specification": "Input\n\nThe first line contains two space separated integers n, d (1 \u2264 n \u2264 100; 1 \u2264 d \u2264 10000). The second line contains n space-separated integers: t1, t2, ..., tn (1 \u2264 ti \u2264 100).", "testcase": ["5 200\n1 20 30 40 50", "10 5000\n10 20 30 40 50 60 70 80 90 100", "3 1000\n50 60 70", "6 500\n10 20 30 40 50 60", "8 8000\n12 24 36 48 60 72 84 96", "2 3000\n50 100", "4 4500\n10 30 50 70", "7 7000\n14 28 42 56 70 84 98", "9 1000\n11 22 33 44 55 66 77 88 99", "1 100\n100"]}
{"name": "770_A. New Password", "specification": "Input\n\nThe first line contains two positive integers n and k (2 \u2264 n \u2264 100, 2 \u2264 k \u2264 min(n, 26)) \u2014 the length of the password and the number of distinct symbols in it. \n\nPay attention that a desired new password always exists.", "testcase": ["3 2", "26 2", "50 26", "100 26", "20 5", "60 10", "80 20", "25 25", "33 15", "75 20"]}
{"name": "903_A. Hungry Student Problem", "specification": "Input\n\nThe first line contains one integer n (1 \u2264 n \u2264 100) \u2014 the number of testcases.\n\nThe i-th of the following n lines contains one integer xi (1 \u2264 xi \u2264 100) \u2014 the number of chicken chunks Ivan wants to eat.", "testcase": ["10\n1\n5\n10\n25\n50\n75\n80\n90\n100\n33"]}
{"name": "950_A. Left-handers, Right-handers and Ambidexters", "specification": "Input\n\nThe only line contains three integers l, r and a (0 \u2264 l, r, a \u2264 100) \u2014 the number of left-handers, the number of right-handers and the number of ambidexters at the training.", "testcase": ["10 20 30", "0 0 0", "50 50 50", "100 0 100", "0 100 50", "25 75 0", "33 33 33", "60 40 10", "80 10 5", "0 50 25"]}
{"name": "p03125 AtCoder Beginner Contest 118 - B +/- A", "specification": "Constraints\n\n* All values in input are integers.\n* 1 \\leq A \\leq B \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B", "testcase": ["1 1", "2 5", "1 20", "3 10", "11 19", "6 15", "7 7", "10 20", "15 15", "8 12"]}
{"name": "701_A. Cards", "specification": "Input\n\nThe first line of the input contains integer n (2 \u2264 n \u2264 100) \u2014 the number of cards in the deck. It is guaranteed that n is even.\n\nThe second line contains the sequence of n positive integers a1, a2, ..., an (1 \u2264 ai \u2264 100), where ai is equal to the number written on the i-th card.", "testcase": ["4\n1 2 3 4", "6\n5 6 5 6 7 7", "8\n8 8 9 9 10 10 11 11", "10\n1 2 3 4 5 5 4 3 2 1", "12\n6 7 8 9 10 11 11 10 9 8 7 6", "14\n14 13 12 11 10 9 8 8 9 10 11 12 13 14", "16\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8", "18\n9 9 8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1", "20\n10 20 30 40 50 60 70 80 90 100 100 90 80 70 60 50 40 30 20 10", "22\n11 12 13 14 15 16 17 18 19 20 21 22 22 21 20 19 18 17 16 15 14 13 12 11"]}
{"name": "p03470 AtCoder Beginner Contest 085 - Kagami Mochi", "specification": "Constraints\n\n* 1 \u2264 N \u2264 100\n* 1 \u2264 d_i \u2264 100\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nd_1\n:\nd_N", "testcase": ["1\n50", "2\n10\n20", "5\n5\n10\n15\n20\n25", "3\n33\n66\n99", "4\n1\n100\n50\n75", "6\n20\n40\n60\n80\n100\n1", "7\n11\n22\n33\n44\n55\n66\n77", "8\n8\n16\n24\n32\n40\n48\n56\n64", "9\n100\n90\n80\n70\n60\n50\n40\n30\n20", "10\n1\n11\n21\n31\n41\n51\n61\n71\n81\n91"]}
{"name": "p03369 AtCoder Beginner Contest 095 - Something on It", "specification": "Constraints\n\n* S is a string of length 3.\n* Each character in S is `o` or `x`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS", "testcase": ["ooo", "oox", "oxo", "oxx", "xoo", "xox", "xxo", "xxx", "oxo", "xoo"]}
{"name": "p02976 AtCoder Grand Contest 035 - Even Degrees", "specification": "Constraints\n\n* 2 \\leq N \\leq 10^5\n* N-1 \\leq M \\leq 10^5\n* 1 \\leq A_i,B_i \\leq N (1\\leq i\\leq M)\n* The given graph is simple and connected.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\n:\nA_M B_M", "testcase": ["2 1\n1 2", "3 2\n1 2\n2 3", "4 3\n1 2\n2 3\n3 4", "5 4\n1 2\n2 3\n3 4\n4 5", "3 2\n1 3\n2 3", "4 3\n1 2\n2 3\n2 4", "5 4\n1 2\n2 3\n2 4\n2 5", "6 5\n1 2\n2 3\n2 4\n3 5\n4 6", "7 6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7", "8 7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n6 8"]}
{"name": "p03569 CODE FESTIVAL 2017 qual C - Inserting 'x'", "specification": "Constraints\n\n* 1 \\leq |s| \\leq 10^5\n* s consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns", "testcase": ["a", "abc", "zzz", "hello", "openai", "testcase", "abcdefghijklmnopqrstuvwxyz", "quickbrownfox", "loremipsumdolorsit", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (continued until it reaches 10^5 characters)"]}
{"name": "p03288 AtCoder Beginner Contest 104 - Rated for Me", "specification": "Constraints\n\n* 0 \u2264 R \u2264 4208\n* R is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nR", "testcase": ["0", "1", "420", "2000", "3500", "4207", "4208", "3678", "1532", "2864"]}
{"name": "p02680 AtCoder Beginner Contest 168 - . (Single Dot)", "specification": "Constraints\n\n* All values in input are integers between -10^9 and 10^9 (inclusive).\n* 1 \\leq N, M \\leq 1000\n* A_i < B_i\\ (1 \\leq i \\leq N)\n* E_j < F_j\\ (1 \\leq j \\leq M)\n* The point (0, 0) does not lie on any of the given segments.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1 C_1\n:\nA_N B_N C_N\nD_1 E_1 F_1\n:\nD_M E_M F_M", "testcase": ["2 2\n1 5 3\n7 10 8\n-5 -2 -3\n20 25 23", "1 1\n-100 100 50\n-1000 0 -500", "3 3\n-1000000000 999999999 0\n1 1000 500\n200 999 600\n-999 -100 -500\n10000 100000 50000\n100000000 1000000000 500000000", "2 2\n-500 0 -250\n100 500 300\n-9999 -1000 -5000\n1000 100000 50000", "4 4\n-10 10 5\n-20 20 15\n-30 30 25\n-40 40 35\n-50 -40 -45\n-60 -50 -55\n-70 -60 -65\n-80 -70 -75", "1 3\n-1000 1000 0\n-10000 -1000 -5000\n-100 -10 -55\n1000 10000 5500", "3 1\n10 20 15\n30 40 35\n50 60 55\n-50 -40 -45", "2 3\n-900000000 800000000 1000000\n-800000000 900000000 2000000\n-700000000 -500000000 -600000000\n-400000000 -200000000 -300000000\n-100000000 100000000 0", "3 2\n1 100 50\n101 200 150\n201 300 250\n-300 -200 -250\n-100 -1 -50", "4 4\n-999999999 0 -500000000\n0 999999999 500000000\n-1000 0 -500\n0 1000 500\n-500000 -400000 -450000\n-300000 -200000 -250000\n-100000 0 -50000\n0 100000 50000"]}
{"name": "1399_D. Binary String To Subsequences", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 2 \u22c5 10^4) \u2014 the number of test cases. Then t test cases follow.\n\nThe first line of the test case contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the length of s. The second line of the test case contains n characters '0' and '1' \u2014 the string s.\n\nIt is guaranteed that the sum of n does not exceed 2 \u22c5 10^5 (\u2211 n \u2264 2 \u22c5 10^5).", "testcase": ["2\n3\n101\n5\n11010", "1\n10\n1010101010", "3\n4\n1001\n7\n1111000\n5\n01110", "2\n6\n111000\n8\n00001111", "1\n15\n111100001111000", "3\n5\n11111\n10\n0000000000\n6\n101010", "2\n7\n0101010\n9\n110011001", "1\n20\n11110000111100001111", "2\n8\n11111111\n12\n000000111111", "3\n4\n0000\n6\n111111\n8\n00011000"]}
{"name": "p02271 Exhaustive Search", "specification": "Constraints\n\n* n \u2264 20\n* q \u2264 200\n* 1 \u2264 elements in A \u2264 2000\n* 1 \u2264 Mi \u2264 2000\n\nInput\n\nIn the first line n is given. In the second line, n integers are given. In the third line q is given. Then, in the fourth line, q integers (Mi) are given.", "testcase": ["1\n1\n1\n1", "5\n5 10 15 20 25\n5\n50 100 150 200 250", "20\n50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240\n10\n500 600 700 800 900 1000 1100 1200 1300 1400", "7\n23 45 67 89 101 202 404\n8\n5 10 15 20 25 30 35 40", "10\n50 150 250 350 450 550 650 750 850 950\n10\n1 200 400 600 800 1000 1200 1400 1600 2000", "15\n1500 1400 1300 1200 1100 1000 900 800 700 600 500 400 300 200 100\n5\n1600 1800 1900 1950 2000", "5\n400 800 1200 1600 2000\n20\n2000 1900 1800 1700 1600 1500 1400 1300 1200 1100 1000 900 800 700 600 500 400 300 200 100", "10\n100 200 300 400 500 600 700 800 900 1000\n200\n500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 (repeat 500 for 200 times)", "10\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n5\n1500 1600 1700 1800 1900", "12\n30 45 60 75 90 105 120 135 150 165 180 195\n7\n200 400 600 800 1000 1200 1400"]}
{"name": "1016_A. Death Note", "specification": "Input\n\nThe first line of the input contains two integers n, m (1 \u2264 n \u2264 2 \u22c5 10^5, 1 \u2264 m \u2264 10^9) \u2014 the number of days you will write names in the notebook and the number of names which can be written on each page of the notebook.\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^9), where a_i means the number of names you will write in the notebook during the i-th day.", "testcase": ["2 500\n1000 500", "3 300\n300 600 900", "4 1000\n2000 4000 6000 8000", "5 200\n400 600 800 1000 1200", "1 1000\n10000", "2 10000\n20000 10000", "3 1500\n3000 4500 6000", "4 5000\n10000 15000 20000 25000", "5 100\n200 300 400 500 600", "2 1000000000\n1000000000 500000000"]}
{"name": "1391_C. Cyclic Permutations ", "specification": "Input\n\nThe first and only line contains a single integer n (3 \u2264 n \u2264 10^6).", "testcase": ["3", "100", "9999", "123456", "789000", "500500", "98765", "111111", "999999", "1000000"]}
{"name": "p04019 AtCoder Grand Contest 003 - Wanna go back home", "specification": "Constraints\n\n* 1 \u2266 | S | \u2266 1000\n* S consists of the letters `N`, `W`, `S`, `E`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS", "testcase": ["N", "ESESESESESESESESESESESESES", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "WSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS", "ENWS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "'NE'*500", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "'SE'*250+'NW'*250", "ENWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNWNW"]}
{"name": "p03338 AtCoder Beginner Contest 098 - Cut and Count", "specification": "Constraints\n\n* 2 \\leq N \\leq 100\n* |S| = N\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS", "testcase": ["2\nab", "5\nabcde", "10\nabcdefghij", "20\nabcdefghijklmnopqrst", "50\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwx", "70\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmn", "100\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv", "30\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "80\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb", "15\ncdefghijklmnop"]}
{"name": "p03370 AtCoder Beginner Contest 095 - Bitter Alchemy", "specification": "Constraints\n\n* 2 \u2264 N \u2264 100\n* 1 \u2264 m_i \u2264 1000\n* m_1 + m_2 + ... + m_N \u2264 X \u2264 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\nm_1\nm_2\n:\nm_N", "testcase": ["2 1000\n500\n500", "3 1500\n500\n500\n500", "4 400\n100\n100\n100\n100", "5 1000\n200\n200\n200\n200\n200", "10 5000\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500", "3 1000\n300\n350\n350", "6 600\n100\n100\n100\n100\n100\n100", "7 700\n100\n100\n100\n100\n100\n100\n100", "2 500\n250\n250", "8 1600\n200\n200\n200\n200\n200\n200\n200\n200"]}
{"name": "1060_A. Phone Numbers", "specification": "Input\n\nThe first line contains an integer n \u2014 the number of cards with digits that you have (1 \u2264 n \u2264 100).\n\nThe second line contains a string of n digits (characters \"0\", \"1\", ..., \"9\") s_1, s_2, \u2026, s_n. The string will not contain any other characters, such as leading or trailing spaces.", "testcase": ["5\n12345", "3\n000", "6\n987654", "8\n11122333", "10\n0123456789", "2\n78", "4\n0001", "9\n123456789", "7\n987000", "1\n5"]}
{"name": "1301_B. Motarack's Birthday", "specification": "Input\n\nThe input consists of multiple test cases. The first line contains a single integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains one integer n (2 \u2264 n \u2264 10^{5}) \u2014 the size of the array a.\n\nThe second line of each test case contains n integers a_1, a_2, \u2026, a_n (-1 \u2264 a_i \u2264 10 ^ {9}). If a_i = -1, then the i-th integer is missing. It is guaranteed that at least one integer is missing in every test case.\n\nIt is guaranteed, that the sum of n for all test cases does not exceed 4 \u22c5 10 ^ {5}.", "testcase": ["5\n3\n-1 5 6\n4\n1 2 -1 4\n5\n3 -1 7 8 9\n2\n-1 1000000000\n6\n1 -1 3 4 5 6\n7\n1 2 3 -1 5 6 7\n5\n10 -1 12 -1 14\n8\n1 2 3 4 5 -1 7 8\n6\n100 -1 200 -1 300 -1\n4\n-1 2 3 -1"]}
{"name": "1311_C. Perform the Combo", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases.\n\nThen t test cases follow.\n\nThe first line of each test case contains two integers n and m (2 \u2264 n \u2264 2 \u22c5 10^5, 1 \u2264 m \u2264 2 \u22c5 10^5) \u2014 the length of s and the number of tries correspondingly.\n\nThe second line of each test case contains the string s consisting of n lowercase Latin letters.\n\nThe third line of each test case contains m integers p_1, p_2, ..., p_m (1 \u2264 p_i < n) \u2014 the number of characters pressed right during the i-th try.\n\nIt is guaranteed that the sum of n and the sum of m both does not exceed 2 \u22c5 10^5 (\u2211 n \u2264 2 \u22c5 10^5, \u2211 m \u2264 2 \u22c5 10^5).\n\nIt is guaranteed that the answer for each letter does not exceed 2 \u22c5 10^9.", "testcase": ["1\n2 1\nab\n1", "1\n5 2\nabcde\n1 3", "1\n4 1\nabcd\n2", "1\n3 1\nxyz\n1", "2\n5 1\nabcde\n2\n3 2\nxyz\n1 2", "1\n6 2\nabcdef\n1 4", "1\n7 3\nabcabcd\n2 4 5", "1\n10 1\nabcdefghij\n5", "2\n4 1\nwxyz\n3\n6 2\nabcdef\n2 4", "1\n8 2\nabcdabcd\n3 6"]}
{"name": "551_A. GukiZ and Contest", "specification": "Input\n\nThe first line contains integer n (1 \u2264 n \u2264 2000), number of GukiZ's students. \n\nThe second line contains n numbers a1, a2, ... an (1 \u2264 ai \u2264 2000) where ai is the rating of i-th student (1 \u2264 i \u2264 n).", "testcase": ["1\n1", "2\n1 2000", "3\n500 1000 1500", "4\n100 200 300 400", "5\n2000 2000 2000 2000 2000", "6\n1 2 3 4 5 6", "7\n1994 1995 1996 1997 1998 1999 2000", "8\n1000 1000 1000 1000 1000 1000 1000 1000", "10\n1 2 3 4 5 6 7 8 9 10", "12\n1500 1600 1700 1800 1900 2000 1500 1600 1700 1800 1900 2000"]}
{"name": "p03821 AtCoder Grand Contest 009 - Multiple Array", "specification": "Constraints\n\n* All input values are integers.\n* 1 \u2266 N \u2266 10^5\n* 0 \u2266 A_i \u2266 10^9(1 \u2266 i \u2266 N)\n* 1 \u2266 B_i \u2266 10^9(1 \u2266 i \u2266 N)\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\n:\nA_N B_N", "testcase": ["2\n1 5\n1000000000 1000000000", "5\n0 1\n100 200\n300 400\n500 600\n700 800", "3\n0 1000000000\n500000000 500000000\n1000000000 1", "4\n1 1\n2 2\n3 3\n4 4", "1\n0 1000000000", "6\n999999999 999999999\n888888888 888888888\n777777777 777777777\n666666666 666666666\n555555555 555555555\n444444444 444444444", "5\n0 1\n0 2\n0 3\n0 4\n0 5", "3\n100 1000\n200 2000\n300 3000", "4\n123456789 987654321\n111111111 999999999\n222222222 888888888\n333333333 777777777", "2\n500000000 500000000\n1000000000 1000000000"]}
{"name": "p03168 Educational DP Contest - Coins", "specification": "Constraints\n\n* N is an odd number.\n* 1 \\leq N \\leq 2999\n* p_i is a real number and has two decimal places.\n* 0 < p_i < 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\np_1 p_2 \\ldots p_N", "testcase": ["3\n0.25 0.75 0.35", "5\n0.12 0.23 0.45 0.67 0.89", "7\n0.11 0.22 0.33 0.44 0.55 0.66 0.77", "9\n0.14 0.29 0.31 0.46 0.51 0.69 0.72 0.83 0.94", "11\n0.21 0.32 0.43 0.54 0.65 0.71 0.15 0.27 0.38 0.49 0.59", "13\n0.19 0.28 0.37 0.42 0.53 0.64 0.73 0.18 0.26 0.39 0.47 0.56 0.67", "15\n0.23 0.34 0.41 0.52 0.63 0.74 0.12 0.25 0.38 0.46 0.57 0.68 0.75 0.81 0.92", "17\n0.22 0.35 0.42 0.51 0.61 0.72 0.13 0.24 0.36 0.48 0.52 0.62 0.78 0.85 0.91 0.16 0.28", "19\n0.15 0.26 0.37 0.48 0.55 0.69 0.79 0.13 0.29 0.39 0.45 0.58 0.63 0.72 0.82 0.19 0.31 0.47 0.59", "21\n0.17 0.28 0.34 0.49 0.56 0.67 0.73 0.14 0.27 0.38 0.46 0.57 0.68 0.74 0.83 0.12 0.23 0.39 0.45 0.59 0.62"]}
{"name": "p03003 AtCoder Beginner Contest 130 - Common Subsequence", "specification": "Constraints\n\n* 1 \\leq N, M \\leq 2 \\times 10^3\n* The length of S is N.\n* The length of T is M.\n* 1 \\leq S_i, T_i \\leq 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nS_1 S_2 ... S_{N-1} S_{N}\nT_1 T_2 ... T_{M-1} T_{M}", "testcase": ["2 2\n1 2\n3 4", "3 4\n1 2 3\n4 5 6 7", "4 3\n1000 2000 3000 4000\n5000 6000 7000", "5 5\n100 200 300 400 500\n600 700 800 900 1000", "6 4\n10000 20000 30000 40000 50000 60000\n70000 80000 90000 100000", "7 2\n100 1000 10000 100000 20000 30000 40000\n50000 60000", "1 3\n10000\n20000 30000 40000", "2 5\n100 200\n300 400 500 600 700", "3 3\n1 1000 100000\n50000 60000 70000", "4 4\n1000 2000 3000 10000\n10000 20000 30000 40000"]}
{"name": "1054_A. Elevator or Stairs?", "specification": "Input\n\nThe only line contains six integers x, y, z, t_1, t_2, t_3 (1 \u2264 x, y, z, t_1, t_2, t_3 \u2264 1000) \u2014 the floor Masha is at, the floor Masha wants to get to, the floor the elevator is located on, the time it takes Masha to pass between two floors by stairs, the time it takes the elevator to pass between two floors and the time it takes for the elevator to close or open the doors.\n\nIt is guaranteed that x \u2260 y.", "testcase": ["3 5 1 5 2 1", "7 2 5 6 3 2", "10 1 7 4 2 3", "4 9 3 10 1 5", "2 8 2 7 3 1", "12 5 10 3 4 2", "6 3 8 2 3 1", "9 1 4 9 2 4", "5 10 6 4 3 2", "8 4 7 5 1 3"]}
{"name": "570_B. Simple Game", "specification": "Input\n\nThe first line contains two integers n and m (1 \u2264 m \u2264 n \u2264 10^9) \u2014 the range of numbers in the game, and the number selected by Misha respectively.", "testcase": ["1 1", "100 50", "1000 1000", "5000 2500", "10000 5000", "100000 10000", "1000000 500000", "10000000 1000000", "100000000 50000000", "1000000000 500000000"]}
{"name": "688_B. Lovely Palindromes", "specification": "Input\n\nThe only line of the input contains a single integer n (1 \u2264 n \u2264 10^100 000).", "testcase": ["1", "10", "99999", "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890", "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210", "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999", "50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"]}
{"name": "1028_A. Find Square", "specification": "Input\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 115) \u2014 the number of rows and the number of columns in the table.\n\nThe i-th of the next n lines contains a string of m characters s_{i1} s_{i2} \u2026 s_{im} (s_{ij} is 'W' for white cells and 'B' for black cells), describing the i-th row of the table.", "testcase": ["2 2\nWB\nBW", "3 3\nBBB\nWWW\nBBB", "4 4\nWWBB\nBBWW\nWWBB\nBBWW", "5 5\nBBBBB\nWWWWW\nBBBBB\nWWWWW\nBBBBB", "2 3\nBBB\nWWW", "3 2\nBW\nWB\nBW", "4 5\nBBBBB\nWWWWW\nBBBBB\nWWWWW", "5 4\nBBBB\nWWWW\nBBBB\nWWWW\nBBBB", "6 6\nBBBBBB\nWWWWWW\nBBBBBB\nWWWWWW\nBBBBBB\nWWWWWW", "3 4\nBBBB\nWWWW\nBBBB"]}
{"name": "1353_D. Constructing the Array", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the length of a.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 \u22c5 10^5 (\u2211 n \u2264 2 \u22c5 10^5).", "testcase": ["2\n5\n10000", "3\n10\n20\n30", "4\n5000\n5000\n5000\n5000", "1\n200000", "5\n1\n2\n3\n4\n5", "6\n10000\n10000\n10000\n10000\n10000\n10000", "7\n1000\n2000\n3000\n4000\n5000\n6000\n7000", "2\n50000\n150000", "3\n33333\n33333\n33334", "10\n1000\n2000\n3000\n4000\n5000\n6000\n7000\n8000\n9000\n10000"]}
{"name": "559_B. Equivalent Strings", "specification": "Input\n\nThe first two lines of the input contain two strings given by the teacher. Each of them has the length from 1 to 200 000 and consists of lowercase English letters. The strings have the same length.", "testcase": ["a\na", "ab\nbc", "abc\nxyz", "abcd\nefgh", "abcde\nvwxyz", "abcdef\nghijkl", "hello\nworld", "teststring\nanotherstr", "quickbrown\nlazydogzzz", "thisisalongerexamplestring\nyetanotherexamplestringg"]}
{"name": "1140_A. Detective Book", "specification": "Input\n\nThe first line contains single integer n (1 \u2264 n \u2264 10^4) \u2014 the number of pages in the book.\n\nThe second line contains n integers a_1, a_2, ..., a_n (i \u2264 a_i \u2264 n), where a_i is the number of page which contains the explanation of the mystery on page i.", "testcase": ["1\n1", "1\n1", "4\n1 2 3 4", "5\n2 3 4 5 1", "6\n1 2 3 6 5 6", "3\n1 1 1", "10\n10 10 10 10 10 10 10 10 10 10", "5\n5 4 3 2 1", "7\n2 3 4 5 6 7 1", "10000\n1 2 3 4 5 6 7 8 9 10 ... (continues until) ... 10000"]}
{"name": "699_C. Vacations", "specification": "Input\n\nThe first line contains a positive integer n (1 \u2264 n \u2264 100) \u2014 the number of days of Vasya's vacations.\n\nThe second line contains the sequence of integers a1, a2, ..., an (0 \u2264 ai \u2264 3) separated by space, where: \n\n  * ai equals 0, if on the i-th day of vacations the gym is closed and the contest is not carried out; \n  * ai equals 1, if on the i-th day of vacations the gym is closed, but the contest is carried out; \n  * ai equals 2, if on the i-th day of vacations the gym is open and the contest is not carried out; \n  * ai equals 3, if on the i-th day of vacations the gym is open and the contest is carried out.", "testcase": ["2\n1 2", "5\n0 1 2 3 0", "1\n3", "10\n3 3 2 1 0 2 3 1 2 0", "7\n2 2 2 2 2 2 2", "3\n1 0 2", "4\n0 0 0 0", "8\n3 1 0 2 3 0 1 2", "6\n2 3 1 0 2 3", "9\n0 1 2 3 2 1 0 3 2"]}
{"name": "p03337 AtCoder Beginner Contest 098 - Add Sub Mul", "specification": "Constraints\n\n* -1000 \\leq A,B \\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B", "testcase": ["-1000 -1000", "-500 500", "0 0", "1000 1000", "-333 -777", "123 456", "-999 999", "500 -250", "1000 -1000", "333 -444"]}
{"name": "1373_D. Maximum Sum on Even Positions", "specification": "Input\n\nThe first line of the input contains one integer t (1 \u2264 t \u2264 2 \u22c5 10^4) \u2014 the number of test cases. Then t test cases follow.\n\nThe first line of the test case contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the length of a. The second line of the test case contains n integers a_0, a_1, ..., a_{n-1} (1 \u2264 a_i \u2264 10^9), where a_i is the i-th element of a.\n\nIt is guaranteed that the sum of n does not exceed 2 \u22c5 10^5 (\u2211 n \u2264 2 \u22c5 10^5).", "testcase": ["1\n5\n1 2 3 4 5", "2\n3\n100 200 300\n4\n1000 2000 3000 4000", "1\n2\n1000000000 999999999", "1\n6\n5 10 15 20 25 30", "3\n2\n500 500\n3\n1000 1500 2000\n4\n250 500 750 1000", "1\n4\n1 100000000 500000000 1000000000", "2\n3\n2 4 8\n2\n16 32", "1\n1\n1000", "2\n5\n10 20 30 40 50\n2\n1 1000000000", "1\n3\n50000000 100000000 150000000"]}
{"name": "p02600 M-SOLUTIONS Programming Contest 2020 - Kyu in AtCoder", "specification": "Constraints\n\n* 400 \\leq X \\leq 1999\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX", "testcase": ["400", "500", "750", "999", "1234", "1500", "1609", "1800", "1900", "1999"]}
{"name": "275_A. Lights Out", "specification": "Input\n\nThe input consists of three rows. Each row contains three integers each between 0 to 100 inclusive. The j-th number in the i-th row is the number of times the j-th light of the i-th row of the grid is pressed.", "testcase": ["0 0 0\n0 0 0\n0 0 0", "1 2 3\n4 5 6\n7 8 9", "10 20 30\n40 50 60\n70 80 90", "100 100 100\n100 100 100\n100 100 100", "12 34 56\n78 90 23\n45 67 89", "0 50 100\n25 75 50\n100 0 50", "33 33 33\n66 66 66\n99 99 99", "11 22 33\n44 55 66\n77 88 99", "1 0 1\n0 1 0\n1 0 1", "99 88 77\n66 55 44\n33 22 11"]}
{"name": "1371_D. Grid-00100", "specification": "Input\n\nThe input consists of multiple test cases. The first line contains a single integer t (1 \u2264 t \u2264 100) \u2014 the number of test cases. Next t lines contain descriptions of test cases.\n\nFor each test case the only line contains two integers n, k (1 \u2264 n \u2264 300, 0 \u2264 k \u2264 n^2).\n\nIt is guaranteed that the sum of n^2 for all test cases does not exceed 10^5.", "testcase": ["10\n2 2\n5 10\n10 20\n15 50\n20 100\n25 200\n30 300\n40 600\n50 1000\n60 1500"]}
{"name": "1242_A. Tile Painting", "specification": "Input\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 10^{12}), the length of the path.", "testcase": ["1", "10", "1000", "100000", "1000000000", "10000000000", "100000000000", "500000000000", "999999999999", "1000000000000"]}
{"name": "1351_C. Skier", "specification": "Input\n\nThe first line contains an integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases in the input. Then t test cases follow.\n\nEach set is given by one nonempty string of the characters 'S', 'N', 'W', 'E'. The length of the string does not exceed 10^5 characters.\n\nThe sum of the lengths of t given lines over all test cases in the input does not exceed 10^5.", "testcase": ["10\nS\nNN\nEEE\nWWWW\nSSSSS\nNNNNNN\nEEEEEEE\nWWWWWWWW\nSSSSSSSSS\nNNNNNNNNNN"]}
