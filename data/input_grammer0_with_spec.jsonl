{"name": "71_A - 1", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> [a-z S}", "<T_1>->[a-z]{S}"], "constraints": ["1<=n<=100", "1<=S<=100"], "input_spec": "t line contains an integer n (1 ≤ n ≤ 100). Each of the following n lines contains one word. All the words consist of lowercase Latin letters and possess the lengths of from 1 to 100 characters.\n"}
{"name": "p02658 - 2", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["2<=N<=10^5", "0<=A_i<=10^18"], "input_spec": "* 2 \\leq N \\leq 10^5\n* 0 \\leq A_i \\leq 10^{18}\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1 ... A_N\n\n"}
{"name": "p02761 - 3", "grammer": ["<S>->N <s> [M] <n> <T_M>", "<T_i>-><T_i-1> <n> S_i <s> C_i", "<T_1>->S_i <s> C_i"], "constraints": ["1<=N<=3", "0<=M<=5", "1<=S_i<=N", "0<=C_i<=9"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 3\n* 0 \\leq M \\leq 5\n* 1 \\leq s_i \\leq N\n* 0 \\leq c_i \\leq 9\n\n\n given from Standard Input in the following format:\n\n\nN M\ns_1 c_1\n\\vdots\ns_M c_M\n\n"}
{"name": "231_A - 4", "grammer": ["<S>->[N] <s> <T_N>", "<T_i>-><T_i-1> <n> d <s> d <s> d", "<T_1>->d <s> d <s> d", "d->0 | 1"], "constraints": ["1<=N<=1000"], "input_spec": "t input line contains a single integer n (1 ≤ n ≤ 1000) — the number of problems in the contest. Then n lines contain three integers each, each integer is either 0 or 1. If the first number in the line equals 1, then Petya is sure about the problem's solution, otherwise he isn't sure. The second number shows Vasya's view on the solution, the third number shows Tonya's view. The numbers on the lines are separated by spaces.\n"}
{"name": "p02623 - 5", "grammer": ["<S>->[N] <s> [M] <s> K <n> <T_N> <n> <L_M>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i", "<L_i>-><L_i-1> <s> B_i", "<L_1>->B_i"], "constraints": ["1<=N<=200000", "1<=M<=200000", "1<=K<=10^9", "1<=A_i<=10^9", "1<=B_i<=10^9"], "input_spec": "* 1 \\leq N, M \\leq 200000\n* 1 \\leq K \\leq 10^9\n* 1 \\leq A_i, B_i \\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN M K\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_M\n\n"}
{"name": "p02642 - 6", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=2*10^5", "1<=A_i<=10^6"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^6\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\cdots A_N\n\n"}
{"name": "p02702 - 7", "grammer": ["<S>->[1-9]{S}"], "constraints": ["1<=S<=200000"], "input_spec": "* 1 ≤ |S| ≤ 200000\n* S is a string consisting of digits from `1` through `9`.\n\n\n given from Standard Input in the following format:\n\n\nS\n\n"}
{"name": "158_A - 8", "grammer": ["<S>->[n] <s> k <n> <T_n>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=n<=50", "1<=k<=n", "0<=A_i<=100"], "input_spec": "t line of the input contains two integers n and k (1 ≤ k ≤ n ≤ 50) separated by a single space.\n\nThe second line contains n space-separated integers a1, a2, ..., an (0 ≤ ai ≤ 100), where ai is the score earned by the participant who got the i-th place. The given sequence is non-increasing (that is, for all i from 1 to n - 1 the following condition is fulfilled: ai ≥ ai + 1).\n"}
{"name": "118_A - 9", "grammer": ["<S>->[a-zA-Z]{S}"], "constraints": ["1<=S<=100"], "input_spec": "t line represents input string of Petya's program. This string only consists of uppercase and lowercase Latin letters and its length is from 1 to 100, inclusive.\n"}
{"name": "p02743 - 10", "grammer": ["<S>->a <s> b <s> c"], "constraints": ["1<=a<=10^9", "1<=b<=10^9", "1<=c<=10^9"], "input_spec": "* 1 \\leq a, b, c \\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\na \\ b \\ c\n\n"}
{"name": "282_A - 11", "grammer": ["<S>->[n] <n> <T_n>", "<T_i>-><T_i-1> <n> C", "<T_1>-> C", "C->++X | --X | X++ | X--"], "constraints": ["1<=n<=150"], "input_spec": "t line contains a single integer n (1 ≤ n ≤ 150) — the number of statements in the programme.\n\nNext n lines contain a statement each. Each statement contains exactly one operation (++ or --) and exactly one variable x (denoted as letter «X»). Thus, there are no empty statements. The operation and the variable can be written in any order.\n"}
{"name": "p02983 - 12", "grammer": ["<S>->L <s> R"], "constraints": ["0<=L<2*10^9", "L<R<=2*10^9"], "input_spec": "* All values in input are integers.\n* 0 \\leq L < R \\leq 2 \\times 10^9\n\n\n given from Standard Input in the following format:\n\n\nL R\n\n"}
{"name": "p02936 - 13", "grammer": ["<S>->[N] <s> [Q] <n> <T_N> <n> <L_Q>", "<T_i>-><T_i-1> <n> A_i <s> B_i", "<T_2>->A_i <s> B_i", "<L_i>-><L_i-1> <n> p_i <s> x_i", "<L_1>->p_i <s> x_i"], "constraints": ["2<=N<=2*10^5", "1<=Q<=2*10^5", "1<=A_i<N", "A_i<B_i<=N", "1<=P_i<=N", "1<=x_i<=10^4"], "input_spec": "* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq Q \\leq 2 \\times 10^5\n* 1 \\leq a_i < b_i \\leq N\n* 1 \\leq p_j \\leq N\n* 1 \\leq x_j \\leq 10^4\n* The given graph is a tree.\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN Q\na_1 b_1\n:\na_{N-1} b_{N-1}\np_1 x_1\n:\np_Q x_Q\n\n"}
{"name": "p02684 - 14", "grammer": ["<S>->[N] <s> K <n> <T_i>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["2<+N<=2*10^5", "1<=A_i<=N", "1<=K<=10^18"], "input_spec": "* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq N\n* 1 \\leq K \\leq 10^{18}\n\n\n given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\dots A_N\n\n"}
{"name": "p02756 - 15", "grammer": ["<S>->[a-z]{1,10^5} <n> [Q] <n> <T_Q>", "<T_i>-><T_i-1> <n> <Quary_i>", "<T_1>-><Quary_i>", "<Quary_i>->1 | 2 <s> F_i <s> C_i", "F_i->1 | 2", "C_i->[a-z]{1}"], "constraints": ["1<=Q<=2*10^5"], "input_spec": "* 1 \\leq |S| \\leq 10^5\n* S consists of lowercase English letters.\n* 1 \\leq Q \\leq 2 \\times 10^5\n* T_i = 1 or 2.\n* F_i = 1 or 2, if provided.\n* C_i is a lowercase English letter, if provided.\n\n\n given from Standard Input in the following format:\n\n\nS\nQ\nQuery_1\n:\nQuery_Q\n\n\nIn the 3-rd through the (Q+2)-th lines, Query_i is one of the following:\n\n\n1\n\n\nwhich means T_i = 1, and:\n\n\n2 F_i C_i\n\n\nwhich means T_i = 2.\n"}
{"name": "p02696 - 16", "grammer": ["<S>->A <s> B <s> N"], "constraints": ["1<=A<=10^6", "1<=B<=10^12", "1<=N<=10^12"], "input_spec": "* 1 ≤ A ≤ 10^{6}\n* 1 ≤ B ≤ 10^{12}\n* 1 ≤ N ≤ 10^{12}\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nA B N\n\n"}
{"name": "112_A - 17", "grammer": ["<S>->[a-zA-Z]{S} <n> [a-zA-Z]{S}}"], "constraints": ["0<S<=100"], "input_spec": "the first two lines contains a bought string. The strings' lengths range from 1 to 100 inclusive. It is guaranteed that the strings are of the same length and also consist of uppercase and lowercase Latin letters.\n"}
{"name": "236_A - 18", "grammer": ["<S>->[a-z]{0,100}"], "constraints": [], "input_spec": "t line contains a non-empty string, that contains only lowercase English letters — the user name. This string contains at most 100 letters.\n"}
{"name": "p02802 - 20", "grammer": ["<S>->N <s> [M] <n> <T_M>", "<T_i>-><T_i-1> <n> P_i <s> S_i", "<T_1>->P_i <s> S_i", "S_i->AC | WA"], "constraints": ["1<=N<=10^5", "0<=M<=10^5", "1<=P_i<=N"], "input_spec": "* N, M, and p_i are integers.\n* 1 \\leq N \\leq 10^5\n* 0 \\leq M \\leq 10^5\n* 1 \\leq p_i \\leq N\n* S_i is `AC` or `WA`.\n\n\n given from Standard Input in the following format:\n\n\nN M\np_1 S_1\n:\np_M S_M\n\n"}
{"name": "p03161 - 21", "grammer": ["<S>->N <s> [K] <n> <T_K>", "<T_i>-><T_i-1> <s> h_i", "<T_1>->h_i"], "constraints": ["2<=N<=10^5", "1<=K<=100", "1<=h_i<=10^4"], "input_spec": "* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq K \\leq 100\n* 1 \\leq h_i \\leq 10^4\n\n\n given from Standard Input in the following format:\n\n\nN K\nh_1 h_2 \\ldots h_N\n\n"}
{"name": "50_A - 22", "grammer": ["<S>->M <s> N"], "constraints": ["1<=M<=16", "M<=N<=16"], "input_spec": "gle line you are given two integers M and N — board sizes in squares (1 ≤ M ≤ N ≤ 16).\n"}
{"name": "p02780 - 23", "grammer": ["<S>->[N] <s> K <n> <T_N>", "<T_i>-><T_i-1> <s> P_i", "<T_1>->P_i"], "constraints": ["1<=N<=200000", "1<=K<=N", "1<=P_i<=1000"], "input_spec": "* 1 ≤ K ≤ N ≤ 200000\n* 1 ≤ p_i ≤ 1000\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN K\np_1 ... p_N\n\n"}
{"name": "96_A - 24", "grammer": ["<S>->[01]{0,100}"], "constraints": [], "input_spec": "t input line contains a non-empty string consisting of characters \"0\" and \"1\", which represents players. The length of the string does not exceed 100 characters. There's at least one player from each team present on the field.\n"}
{"name": "p03013 - 25", "grammer": ["<S>->N <s> [M] <n> <T_M>", "<T_i>-><T_i-1> <n> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=10^5", "0<=M<N", "1<=A_i<N", "A_i<A_i+1"], "input_spec": "* 1 \\leq N \\leq 10^5\n* 0 \\leq M \\leq N-1\n* 1 \\leq a_1 < a_2 < ... < a_M \\leq N-1\n\n\n given from Standard Input in the following format:\n\n\nN M\na_1\na_2\n.\n.\n.\na_M\n\n"}
{"name": "p02922 - 26", "grammer": ["<S>->A <s> B"], "constraints": ["2<=A<=20", "1<=B<=20"], "input_spec": "* All values in input are integers.\n* 2 \\leq A \\leq 20\n* 1 \\leq B \\leq 20\n\n\n given from Standard Input in the following format:\n\n\nA B\n\n"}
{"name": "p03038 - 27", "grammer": ["<S>->[N] <s> [M] <n> <T_N> <n> <L_M>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i", "<L_i>-><L_i-1> <n> B_i <s> C_i", "<L_1>->B_i <s> C_i"], "constraints": ["1<=N<=10^5", "1<=M<=10^5", "1<=A_i<=10^9", "1<=C_i<=10^9", "1<=B_i<=N"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq A_i, C_i \\leq 10^9\n* 1 \\leq B_i \\leq N\n\n\n given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_N\nB_1 C_1\nB_2 C_2\n\\vdots\nB_M C_M\n\n"}
{"name": "p02641 - 28", "grammer": ["<S>->X <s> [N] <n> <T_N>", "<T_i>-><T_i-1> <n> P_i", "<T_1>->P_i"], "constraints": ["1<=X<=100", "0<=N<=100", "P_i!=P_j"], "input_spec": "* 1 \\leq X \\leq 100\n* 0 \\leq N \\leq 100\n* 1 \\leq p_i \\leq 100\n* p_1, \\ldots, p_N are all distinct.\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nX N\np_1 ... p_N\n\n"}
{"name": "266_A - 29", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> C", "<T_1>->C", "C->R | G | B"], "constraints": ["1<=N<=50"], "input_spec": "t line contains integer n (1 ≤ n ≤ 50) — the number of stones on the table. \n\nThe next line contains string s, which represents the colors of the stones. We'll consider the stones in the row numbered from 1 to n from left to right. Then the i-th character s equals \"R\", if the i-th stone is red, \"G\", if it's green and \"B\", if it's blue.\n"}
{"name": "546_A - 30", "grammer": ["<S>->K <s> N <s> W"], "constraints": ["1<=K<=1000", "1<=W<=1000", "0<=N<=109"], "input_spec": "t line contains three positive integers k, n, w (1 ≤ k, w ≤ 1000, 0 ≤ n ≤ 109), the cost of the first banana, initial number of dollars the soldier has and number of bananas he wants. \n"}
{"name": "p03069 - 31", "grammer": ["<S>->N <n> [.#]{1}"], "constraints": ["1<=N<=2*10^5"], "input_spec": "* 1 \\leq N \\leq 2\\times 10^5\n* S is a string of length N consisting of `.` and `#`.\n\n\n given from Standard Input in the following format:\n\n\nN\nS\n\n"}
{"name": "p02953 - 32", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> H_i", "<T_1>->H_i"], "constraints": ["1<=N<=10^5", "1<=H_i<=10^9"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n\n\n given from Standard Input in the following format:\n\n\nN\nH_1 H_2 ... H_N\n\n"}
{"name": "281_A - 33", "grammer": ["<S>->[a-zA-Z]{0,103}"], "constraints": [], "input_spec": " line contains a non-empty word. This word consists of lowercase and uppercase English letters. The length of the word will not exceed 103.\n"}
{"name": "p03017 - 35", "grammer": ["<S>->[N] <s> A <s> B <s> C <s> D <n> [.#]{N}"], "constraints": ["4<=N<=200000", "1<=A<=N", "1<=B<=N", "1<=C<=N", "1<=D<=N", "A!=B", "B!=C", "C!=D", "A<B", "A<C", "B<D"], "input_spec": "* 4 \\leq N \\leq 200\\ 000\n* S is a string of length N consisting of `.` and `#`.\n* 1 \\leq A, B, C, D \\leq N\n* Square A, B, C and D do not contain a rock.\n* A, B, C and D are all different.\n* A < B\n* A < C\n* B < D\n\n\n given from Standard Input in the following format:\n\n\nN A B C D\nS\n\n"}
{"name": "791_A - 37", "grammer": ["<S>->A <s> B"], "constraints": ["1<=A<=10", "A<=B<=10"], "input_spec": " line of the input contains two integers a and b (1 ≤ a ≤ b ≤ 10) — the weight of Limak and the weight of Bob respectively.\n"}
{"name": "p02572 - 38", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["2<=N<=2*10^5", "0<=A_i<=10^9"], "input_spec": "* 2 \\leq N \\leq 2\\times 10^5\n* 0 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1 \\ldots A_N\n\n"}
{"name": "p02742 - 39", "grammer": ["<S>->H <s> W"], "constraints": ["1<=H<=10^9", "1<=W<=10^9"], "input_spec": "* 1 \\leq H, W \\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nH \\ W\n\n"}
{"name": "p02891 - 41", "grammer": ["<S>->[a-zA-Z]{1,100} <n> K"], "constraints": ["1<=K<=10^9"], "input_spec": "* 1 \\leq |S| \\leq 100\n* S consists of lowercase English letters.\n* 1 \\leq K \\leq 10^9\n* K is an integer.\n\n\n given from Standard Input in the following format:\n\n\nS\nK\n\n"}
{"name": "69_A - 42", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> X_i <s> Y_i <s> Z_i", "<T_1>->X_i <s> Y_i <s> Z_i"], "constraints": ["1<=N<=100", "-100<=X_i<=100", "-100<=Y_i<=100", "-100<=Z_i<=100"], "input_spec": "t line contains a positive integer n (1 ≤ n ≤ 100), then follow n lines containing three integers each: the xi coordinate, the yi coordinate and the zi coordinate of the force vector, applied to the body ( - 100 ≤ xi, yi, zi ≤ 100).\n"}
{"name": "p02616 - 44", "grammer": ["<S>->N <s> K <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=2*10^5", "1<=K<=2*10^5", "-10^9<=A_i<=10^9"], "input_spec": "* 1 \\leq K \\leq N \\leq 2\\times 10^5\n* |A_i| \\leq 10^9\n\n\n given from Standard Input in the following format:\n\n\nN K\nA_1 \\ldots A_N\n\n"}
{"name": "p03471 - 45", "grammer": ["<S>->N <s> Y"], "constraints": ["1<=N<=2000", "1000<=Y<=2*10^7"], "input_spec": "* 1 ≤ N ≤ 2000\n* 1000 ≤ Y ≤ 2 × 10^7\n* N is an integer.\n* Y is a multiple of 1000.\n\n\n given from Standard Input in the following format:\n\n\nN Y\n\n"}
{"name": "p02579 - 46", "grammer": ["<S>->[H] <s> [W] <n> C_H <s> C_W <n> D_H <s> D_W <n> <T_H,W>", "<T_i,j>-><T_i,j-1> <s> S_i,j", "<T_i,1>-><T_i-1,W> <n> S_i,j", "<T_1,1>->S_i,j", "S_i,j-># | ."], "constraints": ["1<=H<=10^3", "1<=W<=10^3", "1<=C_H<=H", "1<=D_H<=H", "1<=C_W<=W", "1<=D_W<=W", "S_C_H,C_W=.", "S_D_H,D_W=.", "(C_H,C_W)!=(D_H,D_W)"], "input_spec": "* 1 \\leq H,W \\leq 10^3\n* 1 \\leq C_h,D_h \\leq H\n* 1 \\leq C_w,D_w \\leq W\n* S_{ij} is `#` or `.`.\n* S_{C_h C_w} and S_{D_h D_w} are `.`.\n* (C_h,C_w) \\neq (D_h,D_w)\n\n\n given from Standard Input in the following format:\n\n\nH W\nC_h C_w\nD_h D_w\nS_{11}\\ldots S_{1W}\n\\vdots\nS_{H1}\\ldots S_{HW}\n\n"}
{"name": "p02755 - 47", "grammer": ["<S>->A <s> B"], "constraints": ["1<=A<=100", "A<=B<=100"], "input_spec": "* 1 \\leq A \\leq B \\leq 100\n* A and B are integers.\n\n\n given from Standard Input in the following format:\n\n\nA B\n\n"}
{"name": "p03244 - 48", "grammer": ["<S>->[N] <T_N>", "<T_i>-><T_i-1> <s> V_i", "<T_1>->V_i"], "constraints": ["2<=N<=10^5", "1<=V_i<=10^5", "N is even"], "input_spec": "* 2 \\leq n \\leq 10^5\n* n is even.\n* 1 \\leq v_i \\leq 10^5\n* v_i is an integer.\n\n\n given from Standard Input in the following format:\n\n\nn\nv_1 v_2 ... v_n\n\n"}
{"name": "p02609 - 49", "grammer": ["<S>->[N] <n> [01]{N}"], "constraints": ["1<=N<=2*10^5"], "input_spec": "* 1 \\leq N \\leq 2 \\times 10^5\n* X is an integer with N digits in binary, possibly with leading zeros.\n\n\n given from Standard Input in the following format:\n\n\nN\nX\n\n"}
{"name": "1399_A - 51", "grammer": ["<S>->[T] <n> <L_T>", "<L_i>-><L_i-1> <n> [N] <n> <O_N>", "<L_1>->[N] <n> <O_N>", "<O_i>-><O_i-1> <s> A_i", "<O_1>->A_i"], "constraints": ["1<=T<=1000", "1<=N<=50", "1<=A_i<=100"], "input_spec": "t line of the input contains one integer t (1 ≤ t ≤ 1000) — the number of test cases. Then t test cases follow.\n\nThe first line of the test case contains one integer n (1 ≤ n ≤ 50) — the length of a. The second line of the test case contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 100), where a_i is the i-th element of a.\n"}
{"name": "1409_A - 52", "grammer": ["<S>->[T] <n> <L_T>", "<L_i>-><L_i-1> <n> a <s> b", "<L_1>->a <s> b"], "constraints": ["1<=T<=2*10^4", "1<=a<=10^9", "1<=b<=10^9"], "input_spec": "t line of the input contains one integer t (1 ≤ t ≤ 2 ⋅ 10^4) — the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains two integers a and b (1 ≤ a, b ≤ 10^9).\n"}
{"name": "58_A - 53", "grammer": ["<S>->[a-z]{1,100}"], "constraints": [], "input_spec": "t and only line contains the word s, which Vasya typed. This word consisits of small Latin letters, its length is no less that 1 and no more than 100 letters.\n"}
{"name": "p03037 - 54", "grammer": ["<S>->N <s> [M] <n> <T_M>", "<T_i>-><T_i-1> <n> L_i <s> R_i", "<T_1>->L_i <s> R_i"], "constraints": ["1<=N<=10^5", "1<=M<=10^5", "1<=L_1<=N", "L_i<=R_i<=N"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq L_i \\leq R_i \\leq N\n\n\n given from Standard Input in the following format:\n\n\nN M\nL_1 R_1\nL_2 R_2\n\\vdots\nL_M R_M\n\n"}
{"name": "p02682 - 55", "grammer": ["<S>->A <s> B <s> C <s> K"], "constraints": [], "input_spec": "* All values in input are integers.\n* 0 \\leq A, B, C\n* 1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9\n\n\n given from Standard Input in the following format:\n\n\nA B C K\n\n"}
{"name": "p02646 - 56", "grammer": ["<S>->A <s> V <n> B <s> W <n> T"], "constraints": ["-10^9<=A<=10^9", "-10^9<=B<=10^9", "1<=V<=10^9", "1<=V<=10^9", "1<=T<=10^9", "A!=B"], "input_spec": "* -10^9 \\leq A,B \\leq 10^9\n* 1 \\leq V,W \\leq 10^9\n* 1 \\leq T \\leq 10^9\n* A \\neq B\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nA V\nB W\nT\n\n"}
{"name": "1409_D - 57", "grammer": ["<S>->[T] <n> <L_T>", "<L_i>-><L_i-1> <n> N <s> S", "<L_1>->N <s> S"], "constraints": ["1<=T<=2*10^4", "1<=N<=10^18", "1<=S<=162"], "input_spec": "t line of the input contains one integer t (1 ≤ t ≤ 2 ⋅ 10^4) — the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains two integers n and s (1 ≤ n ≤ 10^{18}; 1 ≤ s ≤ 162).\n"}
{"name": "p02995 - 58", "grammer": ["<S>->A <s> B <s> C <s> D"], "constraints": ["1<=A<=10^18", "A<=B<=10^18", "1<=C<=10^9", "1<=D<=10^19"], "input_spec": "* 1\\leq A\\leq B\\leq 10^{18}\n* 1\\leq C,D\\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nA B C D\n\n"}
{"name": "p02754 - 59", "grammer": ["<S>->N <s> A <s> B"], "constraints": ["1<=N<=10^18", "0<=A", "0<=B", "0<A+B<=10^18"], "input_spec": "* 1 \\leq N \\leq 10^{18}\n* A, B \\geq 0\n* 0 < A + B \\leq 10^{18}\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN A B\n\n"}
{"name": "p02912 - 61", "grammer": ["<S>->[N] <s> M <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=10^5", "1<=M<=10^5", "1<=A_i<=10^9"], "input_spec": "* All values in input are integers.\n* 1 \\leq N, M \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n\n\n given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_N\n\n"}
{"name": "p02689 - 62", "grammer": ["<S>->[N] <s> [M] <n> <T_N> <n> <L_M>", "<T_i>-><T_i-1> <s> H_i", "<T_1>->H_i", "<L_i>-><L_i-1> <n> A_i <s> B_i", "<L_1>->A_i <s> B_i"], "constraints": ["2<=N<=10^5", "1<=M<=10^5", "1<=H_i<=10^9", "1<=A_i<=N", "1<=B_i<=N", "A_i!=B_i"], "input_spec": "* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n* 1 \\leq A_i,B_i \\leq N\n* A_i \\neq B_i\n* Multiple roads may connect the same pair of observatories.\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN M\nH_1 H_2 ... H_N\nA_1 B_1\nA_2 B_2\n:\nA_M B_M\n\n"}
{"name": "131_A - 64", "grammer": ["<S>->[a-zA-Z]{1,100}"], "constraints": [], "input_spec": "t line of the input data contains a word consisting of uppercase and lowercase Latin letters. The word's length is from 1 to 100 characters, inclusive.\n"}
{"name": "p02900 - 65", "grammer": ["<S>->A <s> B"], "constraints": ["1<=A<=10^12", "1<=B<=10^12"], "input_spec": "* All values in input are integers.\n* 1 \\leq A, B \\leq 10^{12}\n\n\n given from Standard Input in the following format:\n\n\nA B\n\n"}
{"name": "p02647 - 66", "grammer": ["<S>->[N] <s> K <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=2*10^5", "1<=K<=2*10^5", "0<=A_i<=N"], "input_spec": "* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq K \\leq 2 \\times 10^5\n* 0 \\leq A_i \\leq N\n\n\n given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\ldots A_N\n\n"}
{"name": "41_A - 67", "grammer": ["<S>->[a-z]{S} <n> [a-z]{s}"], "constraints": ["0<S<=100"], "input_spec": "t line contains word s, the second line contains word t. The words consist of lowercase Latin letters. The input data do not consist unnecessary spaces. The words are not empty and their lengths do not exceed 100 symbols.\n"}
{"name": "p02574 - 68", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["2<=N<=10^6", "1<=A_i<=10^6"], "input_spec": "* 2 \\leq N \\leq 10^6\n* 1 \\leq A_i\\leq 10^6\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1 \\ldots A_N\n\n"}
{"name": "677_A - 70", "grammer": ["<S>->[N] <s> [H] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=N<=1000", "1<=H<=1000", "1<=A_i<=2H"], "input_spec": "t line of the input contains two integers n and h (1 ≤ n ≤ 1000, 1 ≤ h ≤ 1000) — the number of friends and the height of the fence, respectively.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 2h), the i-th of them is equal to the height of the i-th person.\n"}
{"name": "p02971 - 71", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> A_i", "<T_1>->A_i"], "constraints": ["2<=N<=200000", "1<=A_i<=200000"], "input_spec": "* 2 \\leq N \\leq 200000\n* 1 \\leq A_i \\leq 200000\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n"}
{"name": "p02585 - 72", "grammer": ["<S>->[N] <s> K <n> <T_N> <n> <L_N>", "<T_i>-><T_i-1> <s> P_i", "<T_1>->P_i", "<L_i>-><L_i-1> <s> C_i", "<L_1>->C_i"], "constraints": ["2<=N<=500", "1<=K<=10^9", "1<=P_i<=N", "P_i!=i", "P_i!=P_j", "-10^9<=C_i<=10^9"], "input_spec": "* 2 \\leq N \\leq 5000\n* 1 \\leq K \\leq 10^9\n* 1 \\leq P_i \\leq N\n* P_i \\neq i\n* P_1, P_2, \\cdots, P_N are all different.\n* -10^9 \\leq C_i \\leq 10^9\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN K\nP_1 P_2 \\cdots P_N\nC_1 C_2 \\cdots C_N\n\n"}
{"name": "p02972 - 73", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i", "A_i->0 | 1"], "constraints": ["1<=N<=2*10^5"], "input_spec": "* All values in input are integers.\n* 1 \\leq N \\leq 2 \\times 10^5\n* a_i is 0 or 1.\n\n\n given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n"}
{"name": "p02693 - 74", "grammer": ["<S>->K <n> A <s> B"], "constraints": ["1<=A<=B<=1000", "1<=K<=1000"], "input_spec": "* All values in input are integers.\n* 1 \\leq A \\leq B \\leq 1000\n* 1 \\leq K \\leq 1000\n\n\n given from Standard Input in the following format:\n\n\nK\nA B\n\n"}
{"name": "p02678 - 75", "grammer": ["<S>->N <s> [M] <n> <T_M>", "<T_i>-><T_i-1> <n> A_i <s> B_i", "<T_1>->A_i <s> B_i"], "constraints": ["2<=N<=10^5", "1<=M<=2*10^5", "1<=A_i,B_i<=N", "A_i!=B_i"], "input_spec": "* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 2 \\times 10^5\n* 1 \\leq A_i, B_i \\leq N\\ (1 \\leq i \\leq M)\n* A_i \\neq B_i\\ (1 \\leq i \\leq M)\n* One can travel between any two rooms by traversing passages.\n\n\n given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\n:\nA_M B_M\n\n"}
{"name": "p02990 - 76", "grammer": ["<S>->N <s> K"], "constraints": ["1<=K<=N<=2000"], "input_spec": "* 1 \\leq K \\leq N \\leq 2000\n\n\n given from Standard Input in the following format:\n\n\nN K\n\n"}
{"name": "p03074 - 77", "grammer": ["<S>->N <s> K <n> [01]{N}"], "constraints": ["1<=N<=10^5", "1<=K<=10^5"], "input_spec": "* N is an integer satisfying 1 \\leq N \\leq 10^5.\n* K is an integer satisfying 1 \\leq K \\leq 10^5.\n* The length of the string S is N.\n* Each character of the string S is `0` or `1`.\n\n\n given from Standard Input in the following format:\n\n\nN K\nS\n\n"}
{"name": "p02580 - 78", "grammer": ["<S>->H <s> W <s> [M] <n> <T_N>", "<T_i>-><T_i-1> <n> H_i <s> W_i", "<T_1>H_i <s> W_i"], "constraints": ["1<=H,W<=3*10^5", "1<=M<=min(W,3*10^5)", "1<=H_i<=H", "1<=W_i<=W", "(H_i,W_i)!=(H_j,W_j)"], "input_spec": "* All values in input are integers.\n* 1 \\leq H, W \\leq 3 \\times 10^5\n* 1 \\leq M \\leq \\min\\left(H\\times W, 3 \\times 10^5\\right)\n* 1 \\leq h_i \\leq H\n* 1 \\leq w_i \\leq W\n* \\left(h_i, w_i\\right) \\neq \\left(h_j, w_j\\right) \\left(i \\neq j\\right)\n\n\n given from Standard Input in the following format:\n\n\nH W M\nh_1 w_1\n\\vdots\nh_M w_M\n\n"}
{"name": "p02838 - 79", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i>", "<T_1>->A_i"], "constraints": ["2<=N<=3*10^5", "0<=A_i<=2^60"], "input_spec": "* 2 \\leq N \\leq 3 \\times 10^5\n* 0 \\leq A_i < 2^{60}\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n"}
{"name": "p02719 - 80", "grammer": ["<S>->N <s> K"], "constraints": ["0<=N<=10^18", "1<=K<=10^18"], "input_spec": "* 0 ≤ N ≤ 10^{18}\n* 1 ≤ K ≤ 10^{18}\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN K\n\n"}
{"name": "p03000 - 81", "grammer": ["<S>->[N] <s> X <n> <T_N>", "<T_i>-><T_i-1> <s> L_i", "<T_1>->L_i"], "constraints": ["1<=N<=100", "1<=L_i<=100", "1<=X<=10000"], "input_spec": "* 1 \\leq N \\leq 100\n* 1 \\leq L_i \\leq 100\n* 1 \\leq X \\leq 10000\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN X\nL_1 L_2 ... L_{N-1} L_N\n\n"}
{"name": "467_A - 82", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> P_i <s> Q_i", "<T_1>->P_i <s> Q_i"], "constraints": ["1<=N<=100", "0<=P_i<=Q_i<=100"], "input_spec": "t line contains a single integer n (1 ≤ n ≤ 100) — the number of rooms.\n\nThe i-th of the next n lines contains two integers pi and qi (0 ≤ pi ≤ qi ≤ 100) — the number of people who already live in the i-th room and the room's capacity.\n"}
{"name": "p02718 - 83", "grammer": ["<S>->[N] <s> M <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["1<=M<=N<=100", "1<=A_i<=1000", "A_i!=A_j"], "input_spec": "* 1 \\leq M \\leq N \\leq 100\n* 1 \\leq A_i \\leq 1000\n* A_i are distinct.\n* All values in input are integers.\n\n\n given from Standard Input in the following format:\n\n\nN M\nA_1 ... A_N\n\n"}
{"name": "p02630 - 84", "grammer": ["<S>->[N] <n> <T_N> <n> [Q] <n> <L_Q>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i", "<L_i>-><L_i-1> <n> B_i <s> C_i", "<L_1>->B_i <s> C_i"], "constraints": ["1<=N,Q,A_i,B_i,C_i<=10^5", "B_i!=C_i"], "input_spec": "* All values in input are integers.\n* 1 \\leq N, Q, A_{i}, B_{i}, C_{i} \\leq 10^{5}\n* B_{i} \\neq C_{i}\n\n\n given from Standard Input in the following format:\n\n\nN\nA_{1} A_{2} \\cdots A_{N}\nQ\nB_{1} C_{1}\nB_{2} C_{2}\n\\vdots\nB_{Q} C_{Q}\n\n"}
{"name": "785_A - 85", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <n> C", "<T_1>->C", "C->Tetrahedron | Cube | Octahedron | Dodecahedron | Icosahedron"], "constraints": ["1<=N<=200000"], "input_spec": "t line of the input contains a single integer n (1 ≤ n ≤ 200 000) — the number of polyhedrons in Anton's collection.\n\nEach of the following n lines of the input contains a string si — the name of the i-th polyhedron in Anton's collection. The string can look like this:\n\n  * \"Tetrahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a tetrahedron. \n  * \"Cube\" (without quotes), if the i-th polyhedron in Anton's collection is a cube. \n  * \"Octahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an octahedron. \n  * \"Dodecahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a dodecahedron. \n  * \"Icosahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an icosahedron. \n"}
{"name": "266_B - 87", "grammer": ["<S>->[N] <s> T <n> [BG]{N}"], "constraints": ["1<=N,T<=50"], "input_spec": "t line contains two integers n and t (1 ≤ n, t ≤ 50), which represent the number of children in the queue and the time after which the queue will transform into the arrangement you need to find. \n\nThe next line contains string s, which represents the schoolchildren's initial arrangement. If the i-th position in the queue contains a boy, then the i-th character of string s equals \"B\", otherwise the i-th character equals \"G\".\n"}
{"name": "p02975 - 89", "grammer": ["<S>->[N] <n> <T_N>", "<T_i>-><T_i-1> <s> A_i", "<T_1>->A_i"], "constraints": ["3<=N<=10^5", "0<=A_i<=10^9"], "input_spec": "* All values in input are integers.\n* 3 \\leq N \\leq 10^{5}\n* 0 \\leq a_i \\leq 10^{9}\n\n\n given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\ldots a_{N}\n\n"}
